{"version":3,"sources":["lib/eslint.js","lib/report.js","App.js","serviceWorker.js","index.js"],"names":["isFatal","fatal","severity","getUniqueIssues","issues","map","_ref3","messages","restProps","Object","objectWithoutProperties","uniqueMessages","m","JSON","stringify","reduce","accum","curr","indexOf","push","v","parse","getUniqueMessages","warningCount","acc","_ref2","calculateWarnings","errorCount","_ref","calculateErrors","objectSpread","mythx2Severity","High","Medium","decoder","SourceMappingDecoder","issue2EsLint","issue","source","swcLink","swcID","startLineCol","endLineCol","esIssue","ruleId","ruleLink","message","concat","description","head","tail","mythXseverity","line","column","endLine","endCol","lineBreakPositions","getLinebreakPositions","locations","length","_textSrcEntry2lineCol","srcEntry","ary","split","sourceLocation","parseInt","start","loc","convertOffsetToLineColumn","end","textSrcEntry2lineColumn","sourceMap","_textSrcEntry2lineCol2","slicedToArray","formatIssues","data","eslintIssues","report","sourceList","results","k","sourceIndex","match","exec","getSourceIndex","filePath","replace","fixableErrorCount","fixableWarningCount","sources","content","hasOwnProperty","values","convertMythXReport2EsIssue","storageKey","TRIAL_CREDS","address","pwd","client","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","raw","localStorage","getItem","settings","state","compilation","selected","isAnalyzig","analysis","error","saveCredentials","bind","assertThisInitialized","analyze","getContractList","createIframeClient","customApi","remixApi","devMode","port","on","target","version","list","keys","contracts","setState","_this$state","setItem","mythXClient","armlet","Client","ethAddress","password","editor","discardHighlight","analyzeWithStatus","getRequestData","clientToolName","then","result","_this2","handleResult","catch","err","_this$state3","_compilation$data","_compilation$source","_data$contracts","bytecode","evm","deployedBytecode","request","contractName","object","deployedSourceMap","analysisMode","mainSource","key","uniqueIssues","_compilation$data2","_data$contracts2","file","x","name","path","position","color","highlight","_this3","_this$state4","react_default","a","createElement","className","htmlFor","type","id","aria-describedby","placeholder","onChange","e","value","defaultValue","onClick","i","disabled","role","aria-hidden","problemCount","summary","amount","caption","j","highlightIssue","title","style","cursor","href","React","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8cAAaA,EAAU,SAACC,EAAOC,GAAR,OAAqBD,GAAsB,IAAbC,GAqBxCC,EAAkB,SAAAC,GAAM,OACnCA,EAAOC,IAAI,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,SAAaC,EAAgBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,cACnCK,EArBgB,SAAAJ,GASxB,OARmBA,EAASF,IAAI,SAAAO,GAAC,OAAIC,KAAKC,UAAUF,KACpBG,OAAO,SAACC,EAAOC,GAI7C,OAH6B,IAAzBD,EAAME,QAAQD,IAChBD,EAAMG,KAAKF,GAEND,GACN,IAEiBX,IAAI,SAAAe,GAAC,OAAIP,KAAKQ,MAAMD,KAYfE,CAAkBf,GACnCgB,EAPgB,SAAAhB,GAAQ,OAChCA,EAASQ,OAAO,SAACS,EAADC,GAAA,IAAQxB,EAARwB,EAAQxB,MAAOC,EAAfuB,EAAevB,SAAf,OAA+BF,EAAQC,EAAOC,GAAsBsB,EAAVA,EAAM,GAAS,GAMlEE,CAAkBf,GACjCgB,EAXc,SAAApB,GAAQ,OAC9BA,EAASQ,OAAO,SAACS,EAADI,GAAA,IAAQ3B,EAAR2B,EAAQ3B,MAAOC,EAAf0B,EAAe1B,SAAf,OAA8BF,EAAQC,EAAOC,GAAYsB,EAAM,EAAIA,GAAK,GAUnEK,CAAgBlB,GAEnC,OAAOF,OAAAqB,EAAA,EAAArB,CAAA,GACFD,EADL,CAEED,SAAUI,EACVgB,aACAJ,oBC3BAQ,EAAiB,CACrBC,KAAM,EACNC,OAAQ,GAGJC,EAAU,IAAIC,IAkDdC,EAAe,SAACC,EAAOC,GAC3B,IAAIC,EAKFA,EAHGF,EAAMG,MAGC,6DAA+DH,EAAMG,MAFrE,MAKZ,IAcIC,EAAcC,EAdZC,EAAU,CACd1C,OAAO,EACP2C,OAAQP,EAAMG,MACdK,SAAUN,EACVO,QAAO,GAAAC,OAAKV,EAAMW,YAAYC,MAC9BD,YAAW,GAAAD,OAAKV,EAAMW,YAAYE,MAClChD,SAAU6B,EAAeM,EAAMnC,WAAa,EAC5CiD,cAAed,EAAMnC,SACrBkD,MAAO,EACPC,OAAQ,EACRC,SAAU,EACVC,OAAQ,GAIJC,EAAqBtB,EAAQuB,sBAAsBnB,GAEzD,GAAID,EAAMqB,UAAUC,OAAQ,CAC1B,IAD0BC,EAhEE,SAACC,EAAUL,GACzC,IAAMM,EAAMD,EAASE,MAAM,KACrBC,EAAiB,CACrBL,OAAQM,SAASH,EAAI,GAAI,IACzBI,MAAOD,SAASH,EAAI,GAAI,KAEpBK,EAAMjC,EAAQkC,0BAA0BJ,EAAgBR,GAC9D,MAAO,CAACW,EAAID,MAAOC,EAAIE,KA2DQC,CADZjC,EAAMqB,UAAU,GAAGa,UAAUR,MAAM,KAAK,GACMP,GAFrCgB,EAAA/D,OAAAgE,EAAA,EAAAhE,CAAAmD,EAAA,GAEzBnB,EAFyB+B,EAAA,GAEX9B,EAFW8B,EAAA,GAY5B,OAPI/B,IACFE,EAAQS,KAAOX,EAAaW,KAC5BT,EAAQU,OAASZ,EAAaY,OAC9BV,EAAQW,QAAUZ,EAAWU,KAC7BT,EAAQY,OAASb,EAAWW,QAGvBV,GAoEI+B,EAAe,SAACC,EAAMvE,GACjC,IAAMwE,EAAexE,EAClBC,IAAI,SAAAwE,GAAM,OA7CoB,SAACA,EAAQF,GAAS,IAC3CvE,EAAuByE,EAAvBzE,OAAQ0E,EAAeD,EAAfC,WACVC,EAAU,GA4BhB,IAAK,IAAIC,KAzBT5E,EAAOC,IAAI,SAAAgC,GACT,IAAM4C,EAvBa,SAAA5C,GACrB,GAAIA,EAAMqB,UAAUC,OAAQ,CAC1B,IACMuB,EADiB,qBACMC,KAAK9C,EAAMqB,UAAU,GAAGa,WAErD,OAAOW,EAAQA,EAAM,GAAK,EAG5B,OAAO,EAeeE,CAAe/C,GAQ7BgD,EAAWP,EAAWG,GAAaK,QAAQ,MAAO,IAEnDP,EAAQM,KACXN,EAAQM,GAAY,CAClB1D,WAAY,EACZJ,aAAc,EACdgE,kBAAmB,EACnBC,oBAAqB,EACrBH,WACA9E,SAAU,KAIdwE,EAAQM,GAAU9E,SAASY,KAAKiB,EAAaC,EAAOsC,EAAKc,QAAQJ,GAAUK,YAG/DX,EACRA,EAAQY,eAAeX,KACzBD,EAAQC,GAAGzD,aAAewD,EAAQC,GAAGzE,SAASQ,OAAO,SAACS,EAADI,GAAA,IAAQ3B,EAAR2B,EAAQ3B,MAAOC,EAAf0B,EAAe1B,SAAf,OAClDF,EAAQC,EAAOC,GAAsBsB,EAAVA,EAAM,GAAS,GAE7CuD,EAAQC,GAAGrD,WAAaoD,EAAQC,GAAGzE,SAASQ,OAAO,SAACS,EAADC,GAAA,IAAQxB,EAARwB,EAAQxB,MAAOC,EAAfuB,EAAevB,SAAf,OACjDF,EAAQC,EAAOC,GAAYsB,EAAM,EAAIA,GAAK,IAIhD,OAAOf,OAAOmF,OAAOb,GAKJc,CAA2BhB,EAAQF,KACjD5D,OAAO,SAACS,EAAKP,GAAN,OAAeO,EAAIuB,OAAO9B,IAAO,IAE3C,OAAOd,EAAgByE,IClKnBkB,EAAa,qBACbC,EAAc,CAClBC,QAAS,6CACTC,IAAK,SAEHC,EAAS,GAwSEC,cArSb,SAAAA,EAAYC,GAAO,IAAAC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA8F,KAAAJ,GACjBE,EAAA5F,OAAA+F,EAAA,EAAA/F,CAAA8F,KAAA9F,OAAAgG,EAAA,EAAAhG,CAAA0F,GAAAO,KAAAH,KAAMH,IAEN,IAAMO,EAAMC,aAAaC,QAAQf,IAAe,KAC1CgB,EAAWjG,KAAKQ,MAAMsF,GAE5BN,EAAKU,MAAQ,CACXf,QAASc,EAASd,SAAWD,EAAYC,QACzCC,IAAKa,EAASb,KAAOF,EAAYE,IACjCe,YAAa,GACbC,SAAU,GACVC,YAAY,EACZC,SAAU,GACVtC,OAAQ,GACRuC,MAAO,IAGTf,EAAKgB,gBAAkBhB,EAAKgB,gBAAgBC,KAArB7G,OAAA8G,EAAA,EAAA9G,CAAA4F,IACvBA,EAAKmB,QAAUnB,EAAKmB,QAAQF,KAAb7G,OAAA8G,EAAA,EAAA9G,CAAA4F,IACfA,EAAKoB,gBAAkBpB,EAAKoB,gBAAgBH,KAArB7G,OAAA8G,EAAA,EAAA9G,CAAA4F,IAnBN,OAsBjBH,EAASwB,6BAAmB,CAAEC,UAAWC,WAAUC,QADnC,CAAEC,KAAM,SAEjBC,GAAG,WAAY,sBAAuB,SAACC,EAAQ1F,EAAQ2F,EAAStD,GACrE,IAAMuD,EAAOzH,OAAO0H,KAAKxD,EAAKyD,UAAUJ,IACxC3B,EAAKgC,SAAS,CACZrB,YAAa,CACXgB,SACA1F,SACA2F,UACAtD,QAEFsC,SAAUiB,EAAK,OAhCF7B,iFAqCD,IAAAiC,EACS/B,KAAKQ,MAAtBf,EADQsC,EACRtC,QAASC,EADDqC,EACCrC,IACjBW,aAAa2B,QAAQzC,EAAYjF,KAAKC,UAAU,CAAEkF,UAASC,iLAIrBM,KAAKQ,MAAnCf,YAASC,QAAKe,gBAEhBwB,EAAc,IAAIC,IAAOC,OAC7B,CACEC,WAAY3C,EACZ4C,SAAU3C,IAGdM,KAAK8B,SAAS,CACZlB,SAAU,GACVC,MAAO,GACPF,YAAY,aAERhB,EAAO2C,OAAOC,0BACpBN,EAAYO,kBACV,CACEpE,KAAQ4B,KAAKyC,iBACbC,eAAkB,YAEnBC,KAAK,SAAAC,GACJC,EAAKf,SAAS,CACZlB,SAAUgC,EACV/B,MAAO,GACPF,YAAY,IAJA,IAON9G,EAAW+I,EAAX/I,OACRgJ,EAAKC,aAAarC,EAAY1E,OAAQlC,KACrCkJ,MAAM,SAAAC,GACPH,EAAKf,SAAS,CACZjB,MAAOmC,EAAIzG,SAAWyG,EACtBpC,SAAU,GACVD,YAAY,iJAOH,IAAAsC,EACmBjD,KAAKQ,MAA/BC,EADOwC,EACPxC,YAAaC,EADNuC,EACMvC,SADNwC,EAEoBzC,EAA3BrC,YAFO,IAAA8E,EAEA,GAFAA,EAAAC,EAEoB1C,EAAhB1E,cAFJ,IAAAoH,EAEa,GAFbA,EAAAC,EAGYhF,EAAnByD,iBAHO,IAAAuB,EAGK,GAHLA,EAKXC,EAAWxB,EAAUpB,EAAYgB,QAAQf,GAAU4C,IAAID,SACvDE,EAAmB1B,EAAUpB,EAAYgB,QAAQf,GAAU4C,IAAIC,iBAC7DC,EAAU,CACdC,aAAc/C,EACd2C,SAAUA,EAASK,OACnB1F,UAAWqF,EAASrF,UACpBuF,iBAAkBA,EAAiBG,OACnCC,kBAAmBJ,EAAiBvF,UACpC4F,aAAc,QACdC,WAAYpD,EAAYgB,OACxBlD,WAAYrE,OAAO0H,KAAK7F,EAAOmD,SAC/BA,QAAS,IAGX,IAAK,IAAI4E,KAAO/H,EAAOmD,QACjBnD,EAAOmD,QAAQE,eAAe0E,KAChCN,EAAQtE,QAAQ4E,GAAO,CAAE/H,OAAQA,EAAOmD,QAAQ4E,GAAK3E,UAIzD,OAAOqE,uCAGIpF,EAAMwE,GAAQ,IACjBnC,EAAgBT,KAAKQ,MAArBC,YACFsD,EAAe5F,EAAaC,EAAMwE,GAEZ,IAAxBmB,EAAa3G,OACf4C,KAAK8B,SAAS,CACZxD,OAAQ,CACN/B,QAAO,sCAAAC,OAAmCiE,EAAYgB,WAI1DzB,KAAK8B,SAAS,CACZxD,OAAQ,CACNqD,KAAMoC,+CAMI,IACRtD,EAAgBT,KAAKQ,MAArBC,YADQuD,EAEMvD,EAAdrC,KAFQ6F,QAAA,IAAAD,EAED,GAFCA,GAGRnC,UACJqC,QAJY,IAAAD,EAGI,GAHJA,GAIKxD,EAAYgB,SAAW,GAC5C,OAAOvH,OAAO0H,KAAKsC,GAAMpK,IAAI,SAAAqK,GAC3B,MAAO,CACLC,KAAMD,EACNE,KAAI,GAAA7H,OAAKiE,EAAYgB,OAAjB,MAAAjF,OAA4B2H,qFAKjBrI,EAAOS,kFACpB+H,EAAW,CACf3G,MAAO,CAAEd,KAAMN,EAAQM,KAAMC,OAAQP,EAAQO,QAC7CgB,IAAK,CAAEjB,KAAMN,EAAQQ,QAASD,OAAQP,EAAQS,SAE1CuH,EAA6B,IAArBhI,EAAQ5C,SAAiB,UAAY,mBAC7CgG,EAAO2C,OAAOkC,UAAUF,EAAUxI,EAAMgD,SAAUyF,oIAGjD,IAAAE,EAAAzE,KAAA0E,EACsD1E,KAAKQ,MAA1DC,EADDiE,EACCjE,YAAaC,EADdgE,EACchE,SAAUC,EADxB+D,EACwB/D,WAAYE,EADpC6D,EACoC7D,MAAOvC,EAD3CoG,EAC2CpG,OAElD,OACEqG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,WAAf,WACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLF,UAAU,eACVG,GAAG,UACHC,mBAAiB,YACjBC,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOZ,EAAK3C,SAAS,CAAErC,QAAS4F,EAAE5D,OAAO6D,SACnDC,aAAcvF,KAAKQ,MAAMf,WAE7BkF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,OAAf,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLF,UAAU,eACVG,GAAG,MACHE,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOZ,EAAK3C,SAAS,CAAEpC,IAAK2F,EAAE5D,OAAO6D,SAC/CC,aAAcvF,KAAKQ,MAAMd,OAE7BiF,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,kBACVU,QAASxF,KAAKc,iBAHhB,WASN6D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEXrE,EAAYgB,OACVkD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVS,aAAc7E,EACd0E,SAAU,SAACC,GAAD,OAAOZ,EAAK3C,SAAS,CAAEpB,SAAU2E,EAAE5D,OAAO6D,UACnDtF,KAAKkB,kBAAkBpH,IAAI,SAACqK,EAAGsB,GAAJ,OAC1Bd,EAAAC,EAAAC,cAAA,UACEf,IAAK2B,EACLH,MAAOnB,EAAEC,MACRD,EAAEE,UAKXM,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,kBACVU,QAASxF,KAAKiB,QACdyE,SAAU/E,GAERA,EACEgE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAmCa,KAAK,SAASC,cAAY,SAC7EjB,EAAAC,EAAAC,cAAA,yBAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4Ba,KAAK,SAAhD,8CAON9E,EACE8D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2Ba,KAAK,SAC5C9E,KAGE,KAGXvC,EAAO/B,QACLoI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4Ba,KAAK,SAC7CrH,EAAO/B,WAGL,KAGX+B,EAAOqD,KACLgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEXxG,EAAOqD,KAAK7H,IAAI,SAACqK,EAAGsB,GAClB,IAAMI,EAAe1B,EAAE/I,WAAa+I,EAAEnJ,aAChC8K,EAAU,SAACC,EAAQC,GACvB,SAAAxJ,OAAUuJ,EAAV,KAAAvJ,OAA+B,IAAXuJ,EAAeC,EAAf,GAAAxJ,OAA4BwJ,EAA5B,OAEtB,OACErB,EAAAC,EAAAC,cAAA,OAAKf,IAAK2B,EAAGX,UAAU,2BACrBH,EAAAC,EAAAC,cAAA,WAAMV,EAAErF,UAENqF,EAAEnK,SAASF,IAAI,SAACO,EAAG4L,GACjB,OACEtB,EAAAC,EAAAC,cAAA,OAAKf,IAAKmC,EAAGnB,UAAU,QACrBH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACXF,UAAU,wBACVU,QAAS,WAAQf,EAAKyB,eAAe/B,EAAG9J,KAF1C,IAAAmC,OAGOnC,EAAEwC,KAAO,EAHhB,KAAAL,OAGqBnC,EAAEyC,OAHvB,MAKA6H,EAAAC,EAAAC,cAAA,QAAMsB,MAAK,GAAA3J,OAAKnC,EAAEoC,aAAe2J,MAAO,CAAEC,OAAQ,SAAlD,GAAA7J,OAAgEnC,EAAEkC,UAEhElC,EAAEgC,OACAsI,EAAAC,EAAAC,cAAA,KAAGyB,KAAMjM,EAAEiC,SAAUwI,UAAU,QAA/B,IAAwCzK,EAAEgC,OAA1C,KACA,QAMZsI,EAAAC,EAAAC,cAAA,qBAAArI,OACQsJ,EAAQD,EAAc,WAD9B,MAAArJ,OAC6CsJ,EAAQ3B,EAAE/I,WAAY,SADnE,MAAAoB,OACgFsJ,EAAQ3B,EAAEnJ,aAAc,WADxG,WAQH,aA/RHuL,IAAMC,WCHJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjI,MACvB,2DCZNkI,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,KAAK,SAAA0E,GACjCA,EAAaC","file":"static/js/main.c80b26fd.chunk.js","sourcesContent":["export const isFatal = (fatal, severity) => fatal || severity === 2;\n\nconst getUniqueMessages = messages => {\n  const jsonValues = messages.map(m => JSON.stringify(m));\n  const uniuqeValues = jsonValues.reduce((accum, curr) => {\n    if (accum.indexOf(curr) === -1) {\n      accum.push(curr);\n    }\n    return accum;\n  }, []);\n\n  return uniuqeValues.map(v => JSON.parse(v));\n};\n\nconst calculateErrors = messages =>\n  messages.reduce((acc, { fatal, severity }) => isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\nconst calculateWarnings = messages =>\n  messages.reduce((acc, { fatal, severity }) => !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n\nexport const getUniqueIssues = issues =>\n  issues.map(({ messages, ...restProps }) => {\n    const uniqueMessages = getUniqueMessages(messages);\n    const warningCount = calculateWarnings(uniqueMessages);\n    const errorCount = calculateErrors(uniqueMessages);\n\n    return {\n      ...restProps,\n      messages: uniqueMessages,\n      errorCount,\n      warningCount,\n    };\n  });","import SourceMappingDecoder from 'remix-lib/src/sourceMappingDecoder';\n\nimport { isFatal, getUniqueIssues } from './eslint';\n\nconst mythx2Severity = {\n  High: 2,\n  Medium: 1,\n};\n\nconst decoder = new SourceMappingDecoder();\n\n/**\n * Turn a srcmap entry (the thing between semicolons) into a line and\n * column location.\n * We make use of this.sourceMappingDecoder of this class to make\n * the conversion.\n *\n * @param {string} srcEntry - a single entry of solc sourceMap\n * @param {Array} lineBreakPositions - array returned by the function 'mapLineBreakPositions'\n * @returns {line: number, column: number}\n */\nconst textSrcEntry2lineColumn = (srcEntry, lineBreakPositions) => {\n  const ary = srcEntry.split(':');\n  const sourceLocation = {\n    length: parseInt(ary[1], 10),\n    start: parseInt(ary[0], 10),\n  };\n  const loc = decoder.convertOffsetToLineColumn(sourceLocation, lineBreakPositions);\n  return [loc.start, loc.end];\n};\n\n/**\n * Convert a MythX issue into an ESLint-style issue.\n * The eslint report format which we use, has these fields:\n *\n * - column,\n * - endCol,\n * - endLine,\n * - fatal,\n * - line,\n * - message,\n * - description,\n * - ruleId,\n * - ruleLink,\n * - severity\n *\n * but a MythX JSON report has these fields:\n *\n * - description.head\n * - description.tail\n * - locations\n * - severity\n * - swcId\n * - swcTitle\n *\n * @param {object} issue - the MythX issue we want to convert\n * @param {string} source - holds the contract code\n * @returns eslint-issue object\n */\nconst issue2EsLint = (issue, source) => {\n  let swcLink;\n\n  if (!issue.swcID) {\n    swcLink = 'N/A';\n  } else {\n    swcLink = 'https://smartcontractsecurity.github.io/SWC-registry/docs/' + issue.swcID;\n  }\n\n  const esIssue = {\n    fatal: false,\n    ruleId: issue.swcID,\n    ruleLink: swcLink,\n    message: `${issue.description.head}`,\n    description: `${issue.description.tail}`,\n    severity: mythx2Severity[issue.severity] || 1,\n    mythXseverity: issue.severity,\n    line: -1,\n    column: 0,\n    endLine: -1,\n    endCol: 0,\n  };\n\n  let startLineCol, endLineCol;\n  const lineBreakPositions = decoder.getLinebreakPositions(source);\n\n  if (issue.locations.length) {\n    const srcEntry = issue.locations[0].sourceMap.split(';')[0];\n    [startLineCol, endLineCol] = textSrcEntry2lineColumn(srcEntry, lineBreakPositions);\n  }\n\n  if (startLineCol) {\n    esIssue.line = startLineCol.line;\n    esIssue.column = startLineCol.column;\n    esIssue.endLine = endLineCol.line;\n    esIssue.endCol = endLineCol.column;\n  }\n\n  return esIssue;\n};\n\n/**\n * Gets the source index from the issue sourcemap\n * @param {object} issue - issue item from the collection MythX analyze API output\n * @returns {number}\n */\nconst getSourceIndex = issue => {\n  if (issue.locations.length) {\n    const sourceMapRegex = /(\\d+):(\\d+):(\\d+)/g;\n    const match = sourceMapRegex.exec(issue.locations[0].sourceMap);\n    // Ignore `-1` source index for compiler generated code\n    return match ? match[3] : 0;\n  }\n\n  return 0;\n};\n\n/**\n * Converts MythX analyze API output item to Eslint compatible object\n * @param {object} report - issue item from the collection MythX analyze API output\n * @param {object} data - Contains array of solidity contracts source code and the input filepath of contract\n * @returns {object}\n */\nconst convertMythXReport2EsIssue = (report, data) => {\n  const { issues, sourceList } = report;\n  const results = {};\n\n  // eslint-disable-next-line array-callback-return\n  issues.map(issue => {\n    const sourceIndex = getSourceIndex(issue);\n\n    /**\n     * MythX API sends `sourceList` with `/` added in the contract name\n     * Example: sourceList: [ 'token.sol', '/token.sol' ]\n     *\n     * TODO: Remove the `replace` hack by fixing the `sourceList` response from MythX API\n     */\n    const filePath = sourceList[sourceIndex].replace(/^\\//, '');\n\n    if (!results[filePath]) {\n      results[filePath] = {\n        errorCount: 0,\n        warningCount: 0,\n        fixableErrorCount: 0,\n        fixableWarningCount: 0,\n        filePath,\n        messages: [],\n      };\n    }\n\n    results[filePath].messages.push(issue2EsLint(issue, data.sources[filePath].content));\n  });\n\n  for (let k in results) {\n    if (results.hasOwnProperty(k)) {\n      results[k].warningCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n      results[k].errorCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        isFatal(fatal, severity) ? acc + 1 : acc, 0);\n    }\n  }\n\n  return Object.values(results);\n};\n\nexport const formatIssues = (data, issues) => {\n  const eslintIssues = issues\n    .map(report => convertMythXReport2EsIssue(report, data))\n    .reduce((acc, curr) => acc.concat(curr), []);\n\n  return getUniqueIssues(eslintIssues);\n};","import React from 'react';\nimport { createIframeClient, remixApi } from 'remix-plugin';\nimport armlet from 'armlet';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { formatIssues } from './lib/report';\n\nconst storageKey = 'remix-mythx-plugin';\nconst TRIAL_CREDS = {\n  address: '0x0000000000000000000000000000000000000000',\n  pwd: 'trial'\n};\nlet client = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const raw = localStorage.getItem(storageKey) || '{}';\n    const settings = JSON.parse(raw);\n\n    this.state = {\n      address: settings.address || TRIAL_CREDS.address,\n      pwd: settings.pwd || TRIAL_CREDS.pwd,\n      compilation: {},\n      selected: '',\n      isAnalyzig: false,\n      analysis: {},\n      report: {},\n      error: ''\n    };\n\n    this.saveCredentials = this.saveCredentials.bind(this);\n    this.analyze = this.analyze.bind(this);\n    this.getContractList = this.getContractList.bind(this);\n\n    const devMode = { port: 8080 }\n    client = createIframeClient({ customApi: remixApi, devMode });\n    client.on('solidity', 'compilationFinished', (target, source, version, data) => {\n      const list = Object.keys(data.contracts[target]);\n      this.setState({\n        compilation: {\n          target,\n          source,\n          version,\n          data\n        },\n        selected: list[0]\n      });\n    });\n  }\n\n  saveCredentials() {\n    const { address, pwd } = this.state;\n    localStorage.setItem(storageKey, JSON.stringify({ address, pwd }));\n  }\n\n  async analyze() {\n    const { address, pwd, compilation } = this.state;\n\n    const mythXClient = new armlet.Client(\n      {\n        ethAddress: address,\n        password: pwd,\n      });\n\n    this.setState({\n      analysis: {},\n      error: '',\n      isAnalyzig: true\n    });\n    await client.editor.discardHighlight();\n    mythXClient.analyzeWithStatus(\n      {\n        \"data\": this.getRequestData(),\n        \"clientToolName\": \"remythx\"\n      })\n      .then(result => {\n        this.setState({\n          analysis: result,\n          error: '',\n          isAnalyzig: false\n        });\n\n        const { issues } = result;\n        this.handleResult(compilation.source, issues);\n      }).catch(err => {\n        this.setState({\n          error: err.message || err,\n          analysis: {},\n          isAnalyzig: false\n        });\n      });\n    // const result = require('./examples/reportWithIssues.json');\n    // this.handleResult(compilation.source, result);\n  }\n\n  getRequestData() {\n    const { compilation, selected } = this.state;\n    const { data = {}, source = {} } = compilation;\n    const { contracts = [] } = data;\n\n    var bytecode = contracts[compilation.target][selected].evm.bytecode;\n    var deployedBytecode = contracts[compilation.target][selected].evm.deployedBytecode;\n    const request = {\n      contractName: selected,\n      bytecode: bytecode.object,\n      sourceMap: bytecode.sourceMap,\n      deployedBytecode: deployedBytecode.object,\n      deployedSourceMap: deployedBytecode.sourceMap,\n      analysisMode: \"quick\",\n      mainSource: compilation.target,\n      sourceList: Object.keys(source.sources),\n      sources: {}\n    };\n\n    for (let key in source.sources) {\n      if (source.sources.hasOwnProperty(key)) {\n        request.sources[key] = { source: source.sources[key].content };\n      }\n    }\n\n    return request;\n  }\n\n  handleResult(data, result) {\n    const { compilation } = this.state;\n    const uniqueIssues = formatIssues(data, result);\n\n    if (uniqueIssues.length === 0) {\n      this.setState({\n        report: {\n          message: `✔ No errors/warnings found in ${compilation.target}`\n        }\n      });\n    } else {\n      this.setState({\n        report: {\n          list: uniqueIssues\n        }\n      });\n    }\n  }\n\n  getContractList() {\n    const { compilation } = this.state;\n    const { data = {} } = compilation;\n    const { contracts = [] } = data;\n    var file = contracts[compilation.target] || {};\n    return Object.keys(file).map(x => {\n      return {\n        name: x,\n        path: `${compilation.target}::${x}`\n      }\n    });\n  }\n\n  async highlightIssue(issue, message) {\n    const position = {\n      start: { line: message.line, column: message.column },\n      end: { line: message.endLine, column: message.endCol }\n    }\n    const color = message.severity === 1 ? '#ffd300' : '#ff0000';\n    await client.editor.highlight(position, issue.filePath, color);\n  }\n\n  render() {\n    const { compilation, selected, isAnalyzig, error, report } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row border-bottom pb-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"address\">Address</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"address\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Address\"\n                  onChange={(e) => this.setState({ address: e.target.value })}\n                  defaultValue={this.state.address} />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"pwd\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"pwd\"\n                  placeholder=\"Password\"\n                  onChange={(e) => this.setState({ pwd: e.target.value })}\n                  defaultValue={this.state.pwd} />\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.saveCredentials}>\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              compilation.target ?\n                <form>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control\"\n                      defaultValue={selected}\n                      onChange={(e) => this.setState({ selected: e.target.value })}>\n                      {this.getContractList().map((x, i) =>\n                        <option\n                          key={i}\n                          value={x.name}>\n                          {x.path}\n                        </option>\n                      )}\n                    </select>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.analyze}\n                    disabled={isAnalyzig}>\n                    {\n                      isAnalyzig ?\n                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> :\n                        <span>Analyze</span>\n                    }\n                  </button>\n                </form> :\n                <div className=\"alert alert-warning w-100\" role=\"alert\">\n                  You need to compile your contract first!\n                </div>\n            }\n          </div>\n        </div>\n        {\n          error ?\n            <div className=\"row mt-3\">\n              <div className=\"col-md-6 offset-md-3\">\n                <div className=\"alert alert-danger w-100\" role=\"alert\">\n                  {error}\n                </div>\n              </div>\n            </div> : null\n        }\n        {\n          report.message ?\n            <div className=\"row mt-3\">\n              <div className=\"col-md-6 offset-md-3\">\n                <div className=\"alert alert-success w-100\" role=\"alert\">\n                  {report.message}\n                </div>\n              </div>\n            </div> : null\n        }\n        {\n          report.list ?\n            <div className=\"row mt-3\">\n              <div className=\"col-md-6 offset-md-3\">\n                {\n                  report.list.map((x, i) => {\n                    const problemCount = x.errorCount + x.warningCount;\n                    const summary = (amount, caption) => {\n                      return `${amount} ${amount === 1 ? caption : `${caption}s`}`;\n                    };\n                    return (\n                      <div key={i} className=\"border-bottom pt-2 pb-2\">\n                        <div>{x.filePath}</div>\n                        {\n                          x.messages.map((m, j) => {\n                            return (\n                              <div key={j} className=\"pl-3\">\n                                <button type=\"button\"\n                                  className=\"btn btn-link p-0 pr-1\"\n                                  onClick={() => { this.highlightIssue(x, m); }}>\n                                  {`[${m.line + 1}:${m.column}]`}\n                                </button>\n                                <span title={`${m.description}`} style={{ cursor: 'help' }}>{`${m.message}`}</span>\n                                {\n                                  m.ruleId ?\n                                    <a href={m.ruleLink} className=\"pl-1\">[{m.ruleId}]</a> :\n                                    null\n                                }\n                              </div>\n                            );\n                          })\n                        }\n                        <div>\n                          {`✖ ${summary(problemCount, 'problem')} (${summary(x.errorCount, 'error')}, ${summary(x.warningCount, 'warning')})`}\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </div>\n            </div> : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}