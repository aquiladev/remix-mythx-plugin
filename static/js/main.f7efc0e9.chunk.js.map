{"version":3,"sources":["App.js","components/Notifier.js","components/Home.js","images/remix.svg","images/mythx.png","images/plus.svg","lib/report.js","components/Report.js","components/Plugin.js","lib/eslint.js","serviceWorker.js","index.js","components/ExternalLink.js","components/Footer.js"],"names":["separator","storageKey","TRIAL_CREDS","address","pwd","client","App","props","_this","Object","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","analyze","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__","_home_circleci_repo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","_this$state","compilations","selected","analyses","reports","_selected$split","_selected$split2","target","mythx","jwt","options","analysis","issues","wrap","_context","prev","next","state","split","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","Client","login","sent","setState","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","isAnalyzig","getRequestData","getDetectedIssues","uuid","handleResult","source","t0","list","messages","error","message","stop","highlightIssue","_ref2","_callee2","issue","position","color","_context2","line","abrupt","start","column","end","endLine","endCol","severity","filePath","_x","_x2","apply","arguments","raw","localStorage","getItem","settings","JSON","parse","pluginOpen","contractList","mapping","alerts","createIframeClient","onload","then","result","data","processCompilation","on","_","bind","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","saveCredentials","clear","selectContract","addAlert","dismissAlert","_this$state2","_data$contracts","contracts","file","fileMapping","keys","forEach","x","bytecode","evm","deployedBytecode","object","hash","keccak","update","Buffer","from","concat","digest","contractSet","Set","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getContracts","Array","_data$contracts2","map","setItem","stringify","loginWithToken","err","_this$state3","_selected$split3","_selected$split4","contract","_compilations$target","_compilations$target$","_compilations$target$2","_data$contracts3","_data$sources","sources","request","contractName","sourceMap","deployedSourceMap","analysisMode","mainSource","sourceList","key","hasOwnProperty","ast","src","content","_this$state4","uniqueIssues","formatIssues","length","type","text","id","Date","getTime","alert","idx","indexOf","slice","_this$state5","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","style","minHeight","_components_Plugin__WEBPACK_IMPORTED_MODULE_17__","assign","_components_Footer__WEBPACK_IMPORTED_MODULE_18__","isPlugin","_components_Notifier__WEBPACK_IMPORTED_MODULE_19__","onDismiss","_components_Home__WEBPACK_IMPORTED_MODULE_20__","Fragment","React","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_bs_notifier__WEBPACK_IMPORTED_MODULE_1__","Notifier","_ref","timeout","showIcon","_Footer__WEBPACK_IMPORTED_MODULE_1__","_images_remix_svg__WEBPACK_IMPORTED_MODULE_2__","_images_remix_svg__WEBPACK_IMPORTED_MODULE_2___default","_images_mythx_png__WEBPACK_IMPORTED_MODULE_3__","_images_mythx_png__WEBPACK_IMPORTED_MODULE_3___default","_images_plus_svg__WEBPACK_IMPORTED_MODULE_4__","_images_plus_svg__WEBPACK_IMPORTED_MODULE_4___default","Home","className","background","height","textAlign","href","rel","remixLogo","alt","width","verticalAlign","plus","mythxLogo","module","exports","p","mythx2Severity","High","Medium","decoder","SourceMappingDecoder","issue2EsLint","locations","swcLink","swcID","esIssue","fatal","ruleId","ruleLink","description","head","tail","sourceType","startLineCol","endLineCol","lineBreakPositions","getLinebreakPositions","_textSrcEntry2lineCol","srcEntry","ary","sourceLocation","parseInt","loc","convertOffsetToLineColumn","textSrcEntry2lineColumn","_textSrcEntry2lineCol2","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","results","report","functionHashes","textLocationFilterFn","location","sourceFormat","k","filter","undefined","sourceCode","fileName","match","exec","getSourceIndex","errorCount","warningCount","fixableErrorCount","fixableWarningCount","push","reduce","acc","isFatal","values","convertMythXReport2EsIssue","eslintIssues","curr","getUniqueIssues","Report","react_default","role","i","issueCount","summary","amount","caption","m","j","onClick","title","index_es","fontSize","icon","faCode","cursor","ExternalLink","Plugin","classCallCheck","possibleConstructorReturn","getPrototypeOf","creadOpen","infoTooltipOpen","analysisTooltipOpen","assertThisInitialized","_this2","_this$props","slicedToArray","faInfoCircle","right","top","lineHeight","paddingRight","faAngleDown","faAngleRight","Tooltip","placement","isOpen","autohide","toggle","htmlFor","aria-describedby","placeholder","onChange","e","value","defaultValue","disabled","faTrash","aria-hidden","fontWeight","lib","onCopy","faClipboard","components_Report","_ref3","restProps","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","uniqueMessages","accum","v","getUniqueMessages","calculateWarnings","calculateErrors","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","children","_useState","useState","_useState2","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setIsOpen","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_3__","_ExternalLink__WEBPACK_IMPORTED_MODULE_1__","_package_json__WEBPACK_IMPORTED_MODULE_2__","Footer","bottom","packageJson","version"],"mappings":"4TAaMA,EAAY,KACZC,EAAa,qBACbC,EAAc,CAClBC,QAAS,6CACTC,IAAK,SAIHC,EAAS,GAEPC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAgGRQ,QAjGmBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAiGT,SAAAC,IAAA,IAAAC,EAAAlB,EAAAC,EAAAkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhB,EAAAC,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAhB,EAC4Db,EAAK8B,MAAjEnC,EADAkB,EACAlB,QAASC,EADTiB,EACSjB,IAAKkB,EADdD,EACcC,aAAcC,EAD5BF,EAC4BE,SAAUC,EADtCH,EACsCG,SAAUC,EADhDJ,EACgDI,QADhDC,EAESH,EAASgB,MAAMvC,GAFxB2B,EAAAlB,OAAA+B,EAAA,EAAA/B,CAAAiB,EAAA,GAEDE,EAFCD,EAAA,GAIFE,EAAQ,IAAIY,SAAOtC,EAASC,EAAK,WAJ/B+B,EAAAE,KAAA,EAKU7B,EAAKkC,MAAMb,GALrB,cAKFC,EALEK,EAAAQ,KAORnC,EAAKoC,SAAS,CACZpB,SAASf,OAAAoC,EAAA,EAAApC,CAAA,GAAMe,EAAPf,OAAAqC,EAAA,EAAArC,CAAA,GAAkBc,EAAW,OACrCwB,YAAY,EACZjB,QAVMK,EAAAE,KAAA,EAYFhC,EAAOS,KAAK,SAAU,oBAZpB,cAAAqB,EAAAC,KAAA,EAeAL,EAAUvB,EAAKwC,iBAffb,EAAAE,KAAA,GAgBiBR,EAAMd,QAAQgB,GAhB/B,eAgBAC,EAhBAG,EAAAQ,KAAAR,EAAAE,KAAA,GAiBeR,EAAMoB,kBAAkBjB,EAASkB,MAjBhD,QAiBAjB,EAjBAE,EAAAQ,KAmBNnC,EAAKoC,SAAS,CACZpB,SAASf,OAAAoC,EAAA,EAAApC,CAAA,GAAMe,EAAPf,OAAAqC,EAAA,EAAArC,CAAA,GAAkBc,EAAWU,IACrCc,YAAY,IAGdvC,EAAK2C,aAAa7B,EAAaM,GAAQwB,OAAQnB,GAxBzCE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SA0BN3B,EAAKoC,SAAS,CACZpB,SAASf,OAAAoC,EAAA,EAAApC,CAAA,GAAMe,EAAPf,OAAAqC,EAAA,EAAArC,CAAA,GAAkBc,EAAW,OACrCE,QAAQhB,OAAAoC,EAAA,EAAApC,CAAA,GACHgB,EADEhB,OAAAqC,EAAA,EAAArC,CAAA,GAEJc,EAAW,CACV+B,KAAM,CAAC,CACLC,SAAU,CAAC,CACTC,MAAOrB,EAAAkB,GAAII,SAAJtB,EAAAkB,UAKfN,YAAY,IAtCR,yBAAAZ,EAAAuB,SAAAtC,EAAA,kBAjGSZ,EAuNnBmD,eAvNmB,eAAAC,EAAAnD,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAuNF,SAAA0C,EAAOC,EAAOL,GAAd,IAAAM,EAAAC,EAAA,OAAA/C,EAAAC,EAAAgB,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,YACXoB,EAAQS,KAAO,GADJ,CAAAD,EAAA5B,KAAA,eAAA4B,EAAAE,OAAA,wBAKTJ,EAAW,CACfK,MAAO,CAAEF,KAAMT,EAAQS,KAAMG,OAAQZ,EAAQY,QAC7CC,IAAK,CAAEJ,KAAMT,EAAQc,QAASF,OAAQZ,EAAQe,SAE1CR,EAA6B,IAArBP,EAAQgB,SAAiB,UAAY,UATpCR,EAAA5B,KAAA,EAUThC,EAAOS,KAAK,SAAU,YAAaiD,EAAUD,EAAMY,SAAUV,GAVpD,wBAAAC,EAAAP,SAAAG,MAvNE,gBAAAc,EAAAC,GAAA,OAAAhB,EAAAiB,MAAAlE,KAAAmE,YAAA,GAGjB,IAAMC,EAAMC,aAAaC,QAAQhF,IAAe,KAC1CiF,EAAWC,KAAKC,MAAML,GACtB5E,EAAU+E,EAAS/E,SAAWD,EAAYC,QAL/B,OAOjBK,EAAK8B,MAAQ,CACX+C,YAAY,EACZlF,UACAC,IAAK8E,EAAS9E,KAAOF,EAAYE,IACjC0B,IAAK,KACLR,aAAc,GACdC,SAAU,GACV+D,aAAc,GACdC,QAAS,GACTxC,YAAY,EACZvB,SAAU,GACVC,QAAS,GACT+D,OAAQ,KAGVnF,EAASoF,gCACFC,OAAO,WACZlF,EAAKoC,SAAS,CAAEyC,YAAY,IAE5BhF,EAAOS,KAAK,WAAY,wBACrB6E,KAAK,SAACC,GACL,GAAKA,EAAL,CADgB,IAKRC,EAAiBD,EAAjBC,KAAMzC,EAAWwC,EAAXxC,OAETA,GAIL5C,EAAKsF,mBAAmB1C,EAAOxB,OAAQwB,EAAQyC,MAGnDxF,EAAO0F,GAAG,WAAY,sBAAuB,SAACnE,EAAQwB,EAAQ4C,EAAGH,GAC/DrF,EAAKsF,mBAAmBlE,EAAQwB,EAAQyC,OAI5CrF,EAAKsF,mBAAqBtF,EAAKsF,mBAAmBG,KAAxBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IAC1BA,EAAKkC,MAAQlC,EAAKkC,MAAMuD,KAAXxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACbA,EAAK2F,gBAAkB3F,EAAK2F,gBAAgBF,KAArBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACvBA,EAAKO,QAAUP,EAAKO,QAAQkF,KAAbxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACfA,EAAKwC,eAAiBxC,EAAKwC,eAAeiD,KAApBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACtBA,EAAK2C,aAAe3C,EAAK2C,aAAa8C,KAAlBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACpBA,EAAKmD,eAAiBnD,EAAKmD,eAAesC,KAApBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACtBA,EAAK4F,MAAQ5F,EAAK4F,MAAMH,KAAXxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACbA,EAAK6F,eAAiB7F,EAAK6F,eAAeJ,KAApBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IACtBA,EAAK8F,SAAW9F,EAAK8F,SAASL,KAAdxF,OAAAyF,EAAA,EAAAzF,CAAAD,IAChBA,EAAK+F,aAAe/F,EAAK+F,aAAaN,KAAlBxF,OAAAyF,EAAA,EAAAzF,CAAAD,IAxDHA,kFA2DAoB,EAAQwB,EAAQyC,GAAM,IAAAW,EACS7F,KAAK2B,MAA7ChB,EAD+BkF,EAC/BlF,aAAcgE,EADiBkB,EACjBlB,aAAcC,EADGiB,EACHjB,QADGkB,EAGZZ,EAAnBa,UACFC,QAJiC,IAAAF,EAGnB,GAHmBA,GAIhB7E,GACjBgF,EAAc,GAEpBnG,OAAOoG,KAAKF,GAAMG,QAAQ,SAAAC,GACxB,IAAMC,EAAWL,EAAKI,GAAGE,IAAIC,iBAAiBC,OACxCC,EAAO,IAAIC,IAAO,KACxBD,EAAKE,OAAOC,EAAOC,KAAKR,EAAU,QAElCJ,EAAYhF,GAAUA,EACtBgF,EAAW,KAAAa,OAAML,EAAKM,OAAO,SAAY9F,IAG3C,IAAM0B,EAAO7C,OAAOoG,KAAKhB,EAAKa,UAAU9E,IAClC+F,EAAc,IAAIC,IAAJ,GAAAH,OAAAhH,OAAAoH,EAAA,EAAApH,CAAY6E,GAAZ7E,OAAAoH,EAAA,EAAApH,CAA6BE,KAAKmH,aAAajC,EAAMjE,MACzEjB,KAAKiC,SAAS,CACZtB,aAAab,OAAAoC,EAAA,EAAApC,CAAA,GAAMa,EAAPb,OAAAqC,EAAA,EAAArC,CAAA,GAAsBmB,EAAS,CAAEwB,SAAQyC,UACrDtE,SAAQ,GAAAkG,OAAK7F,GAAL6F,OAAczH,GAAdyH,OAA0BnE,EAAK,IACvCgC,aAAcyC,MAAMP,KAAKG,GACzBpC,QAAQ9E,OAAAoC,EAAA,EAAApC,CAAA,GAAM8E,EAAYqB,0CAIjBf,EAAMjE,GAAQ,IAAAoG,EACEnC,EAAnBa,UACJC,QAFqB,IAAAqB,EACL,GADKA,GAEJpG,IAAW,GAChC,OAAOnB,OAAOoG,KAAKF,GAAMsB,IAAI,SAAAlB,GAAC,SAAAU,OAAO7F,GAAP6F,OAAgBzH,GAAhByH,OAA4BV,6CAG5C5G,EAASC,GACvBO,KAAKiC,SAAS,CAAEzC,UAASC,QACzB4E,aAAakD,QAAQjI,EAAYkF,KAAKgD,UAAU,CAAEhI,UAASC,SAC3DO,KAAK2F,SAAS,UAAW,uCA8CrBjG,GACJ,IAAIyB,EAAMnB,KAAK2B,MAAMR,IAErB,GAAIA,EACF,IAEE,OADAzB,EAAO+H,eAAetG,GACfA,EACP,MAAOuG,GACP,GAzJkB,gEAyJdA,EAAI5E,QACN,MAAM4E,EAKZ,OAAOhI,EAAOqC,iDAGC,IAAA4F,EACoB3H,KAAK2B,MAAhChB,EADOgH,EACPhH,aADOiH,EAAAD,EACO/G,SACcgB,MAAMvC,GAF3BwI,EAAA/H,OAAA+B,EAAA,EAAA/B,CAAA8H,EAAA,GAER3G,EAFQ4G,EAAA,GAEAC,EAFAD,EAAA,GAAAE,EAGoBpH,EAAaM,GAHjC+G,EAAAD,EAGP7C,YAHO,IAAA8C,EAGA,GAHAA,EAAAC,EAAAF,EAGItF,cAHJ,IAAAwF,EAGa,GAHbA,EAAAC,EAI0BhD,EAAjCa,iBAJO,IAAAmC,EAIK,GAJLA,EAAAC,EAI0BjD,EAAjBkD,eAJT,IAAAD,EAImB,GAJnBA,EAMTnC,EAAOD,EAAU9E,GACjBoF,EAAWL,EAAK8B,GAAUxB,IAAID,SAC9BE,EAAmBP,EAAK8B,GAAUxB,IAAIC,iBACtC8B,EAAU,CACdC,aAAcR,EACdzB,SAAUA,EAASG,OACnB+B,UAAWlC,EAASkC,UACpBhC,iBAAkBA,EAAiBC,OACnCgC,kBAAmBjC,EAAiBgC,UACpCE,aAAc,QACdC,WAAYzH,EACZ0H,WAAY7I,OAAOoG,KAAKzD,EAAO2F,SAC/BA,QAAS,IAGX,IAAK,IAAIQ,KAAOnG,EAAO2F,QACrB,GAAI3F,EAAO2F,QAAQS,eAAeD,GAAM,CACtC,IAAME,EAAMV,EAAQQ,GAAKE,IACnBC,EAAMtG,EAAO2F,QAAQQ,GAAKI,QAEhCX,EAAQD,QAAQQ,GAAO,CAAEE,MAAKrG,OAAQsG,GAI1C,OAAOV,uCAGInD,EAAMD,GAAQ,IAAAgE,EACcjJ,KAAK2B,MAApCf,EADiBqI,EACjBrI,SAAUE,EADOmI,EACPnI,QAAS8D,EADFqE,EACErE,QACrBsE,EAAeC,YAAajE,EAAMN,EAASK,GAErB,IAAxBiE,EAAaE,OACfpJ,KAAKiC,SAAS,CACZnB,QAAQhB,OAAAoC,EAAA,EAAApC,CAAA,GACHgB,EADEhB,OAAAqC,EAAA,EAAArC,CAAA,GAEJc,EAAW,CACVkC,QAAO,sCAAAgE,OAAmClG,QAKhDZ,KAAKiC,SAAS,CACZnB,QAAQhB,OAAAoC,EAAA,EAAApC,CAAA,GACHgB,EADEhB,OAAAqC,EAAA,EAAArC,CAAA,GAEJc,EAAW,CACV+B,KAAMuG,uCAqBdlJ,KAAKiC,SAAS,CACZtB,aAAc,GACdC,SAAU,GACV+D,aAAc,GACdC,QAAS,GACT/D,SAAU,GACVC,QAAS,4CAIEgH,GACb9H,KAAKiC,SAAS,CAAErB,SAAUkH,qCAGnBuB,EAAMC,GACbtJ,KAAKiC,SAAS,CACZ4C,OAAM,GAAAiC,OAAAhH,OAAAoH,EAAA,EAAApH,CAAME,KAAK2B,MAAMkD,QAAjB,CAAyB,CAC7B0E,IAAK,IAAIC,MAAQC,UACjBJ,KAAMA,EACNvG,QAASwG,4CAKFI,GAAO,IACV7E,EAAW7E,KAAK2B,MAAhBkD,OACF8E,EAAM9E,EAAO+E,QAAQF,GAEvBC,GAAO,GACT3J,KAAKiC,SAAS,CACZ4C,OAAM,GAAAiC,OAAAhH,OAAAoH,EAAA,EAAApH,CAAM+E,EAAOgF,MAAM,EAAGF,IAAtB7J,OAAAoH,EAAA,EAAApH,CAA+B+E,EAAOgF,MAAMF,EAAM,wCAKrD,IAAAG,EACwB9J,KAAK2B,MAA5B+C,EADDoF,EACCpF,WAAYG,EADbiF,EACajF,OAEdmE,EAAUtE,EACdqF,EAAAxJ,EAAAyJ,cAAA,OAAKC,MAAO,CAAE7G,SAAU,WAAY8G,UAAW,UAC7CH,EAAAxJ,EAAAyJ,cAAA,YACED,EAAAxJ,EAAAyJ,cAACG,EAAA,EAADrK,OAAAsK,OAAA,GAAYpK,KAAK2B,MAAjB,CACE6D,gBAAiBxF,KAAKwF,gBACtBE,eAAgB1F,KAAK0F,eACrBtF,QAASJ,KAAKI,QACduF,SAAU3F,KAAK2F,SACf3C,eAAgBhD,KAAKgD,eACrByC,MAAOzF,KAAKyF,UAEhBsE,EAAAxJ,EAAAyJ,cAACK,EAAA,EAAD,CAAQC,UAAQ,IAChBP,EAAAxJ,EAAAyJ,cAACO,EAAA,EAAD,CAAU1F,OAAQA,EAAQ2F,UAAWxK,KAAK4F,gBAE5CmE,EAAAxJ,EAAAyJ,cAACS,EAAA,EAAD,MAEF,OACEV,EAAAxJ,EAAAyJ,cAAAD,EAAAxJ,EAAAmK,SAAA,KACG1B,UA9RS2B,IAAMC,WAoSTjL,iEC3Tf,IAAAkL,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAqBeI,IAjBf,SAAAC,GAAyC,IAArBtG,EAAqBsG,EAArBtG,OAAQ2F,EAAaW,EAAbX,UAC1B,OACEO,EAAAxK,EAAAyJ,cAACiB,EAAA,EAAD,CACE7H,SAAS,eACTyB,OAAQA,EACRuG,QAAS,IACTZ,UAAWA,EACXa,UAAU,uCCXhB,IAAAR,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAS,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAE,EAAAO,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAAE,EAAAS,GAAAE,EAAAb,EAAA,KAAAc,EAAAd,EAAAE,EAAAW,GAiCeE,IA1Bf,WACE,OACEd,EAAAxK,EAAAyJ,cAAAe,EAAAxK,EAAAmK,SAAA,KACEK,EAAAxK,EAAAyJ,cAAA,OAAK8B,UAAU,QACb7B,MAAO,CAAE8B,WAAY,YACrBhB,EAAAxK,EAAAyJ,cAAA,OAAK8B,UAAU,qCAAqC7B,MAAO,CAAE+B,OAAQ,QACnEjB,EAAAxK,EAAAyJ,cAAA,OAAK8B,UAAU,sBACbf,EAAAxK,EAAAyJ,cAAA,MAAI8B,UAAU,uBACZ7B,MAAO,CAAEgC,UAAW,WADtB,cAIJlB,EAAAxK,EAAAyJ,cAAA,OAAK8B,UAAU,oBACbf,EAAAxK,EAAAyJ,cAAA,KAAGkC,KAAK,6BAA6BjL,OAAO,SAASkL,IAAI,uBACvDpB,EAAAxK,EAAAyJ,cAAA,OAAKjB,IAAKqD,IAAWC,IAAI,QAAQpC,MAAO,CAAE+B,OAAQ,IAAKM,MAAO,IAAKC,cAAe,UAEpFxB,EAAAxK,EAAAyJ,cAAA,OAAKjB,IAAKyD,IAAMH,IAAI,OAAOP,UAAU,YAAY7B,MAAO,CAAE+B,OAAQ,IAAKM,MAAO,OAC9EvB,EAAAxK,EAAAyJ,cAAA,KAAGkC,KAAK,oBAAoBjL,OAAO,SAASkL,IAAI,uBAC9CpB,EAAAxK,EAAAyJ,cAAA,OAAKjB,IAAK0D,IAAWJ,IAAI,QAAQpC,MAAO,CAAE+B,OAAQ,IAAKM,MAAO,IAAKC,cAAe,YAIxFxB,EAAAxK,EAAAyJ,cAACsB,EAAA,EAAD,6BC5BNoB,EAAAC,QAAiB7B,EAAA8B,EAAuB,uDCAxCF,EAAAC,QAAiB7B,EAAA8B,EAAuB,uDCAxCF,EAAAC,QAAiB7B,EAAA8B,EAAuB,iJCIlCC,EAAiB,CACrBC,KAAM,EACNC,OAAQ,GAGJC,EAAU,IAAIC,IAkDdC,EAAe,SAAC/J,EAAOV,EAAQ0K,GACnC,IAAIC,EAKFA,EAHGjK,EAAMkK,MAGC,6DAA+DlK,EAAMkK,MAFrE,MAKZ,IAAMC,EAAU,CACdC,OAAO,EACPC,OAAQrK,EAAMkK,MACdI,SAAUL,EACVtK,QAAO,GAAAgE,OAAK3D,EAAMuK,YAAYC,MAC9BD,YAAW,GAAA5G,OAAK3D,EAAMuK,YAAYE,MAClC9J,SAAU+I,EAAe1J,EAAMW,WAAa,EAC5CP,MAAO,EACPG,OAAQ,EACRE,SAAU,EACVC,OAAQ,EACRgK,WAAY,IAGd,GAAIpL,EAAQ,CACV,IAAIqL,EAAcC,EACZC,EAAqBhB,EAAQiB,sBAAsBxL,GAEzD,GAAI0K,EAAU/D,OAAQ,CACpB,IADoB8E,EAjEM,SAACC,EAAUH,GACzC,IAAMI,EAAMD,EAASvM,MAAM,KACrByM,EAAiB,CACrBjF,OAAQkF,SAASF,EAAI,GAAI,IACzB3K,MAAO6K,SAASF,EAAI,GAAI,KAEpBG,EAAMvB,EAAQwB,0BAA0BH,EAAgBL,GAC9D,MAAO,CAACO,EAAI9K,MAAO8K,EAAI5K,KA4DU8K,CADZtB,EAAU,GAAG5E,UAAU3G,MAAM,KAAK,GACYoM,GAF3CU,EAAA5O,OAAA6O,EAAA,EAAA7O,CAAAoO,EAAA,GAEnBJ,EAFmBY,EAAA,GAELX,EAFKW,EAAA,GAGpBpB,EAAQO,WAAaV,EAAU,GAAGU,WAGhCC,IACFR,EAAQ/J,KAAOuK,EAAavK,KAC5B+J,EAAQ5J,OAASoK,EAAapK,OAC9B4J,EAAQ1J,QAAUmK,EAAWxK,KAC7B+J,EAAQzJ,OAASkK,EAAWrK,QAIhC,OAAO4J,GA0FInE,EAAe,SAACjE,EAAMN,EAAStD,GAC1C,IAAMsN,EAAU,GAChBtN,EAAO6E,QAAQ,SAAA0I,IAjEkB,SAACA,EAAQjK,EAASM,GAAS,IACpD5D,EAAWuN,EAAXvN,OACA8G,EAA4BlD,EAA5BkD,QAAS0G,EAAmB5J,EAAnB4J,eACXF,EAAU,GAEVG,EAAuB,SAAAC,GAAQ,MACV,kBAAxBA,EAASnB,YAEiB,SAA1BmB,EAASC,cA0CZ,IAAK,IAAIC,KAtCT5N,EAAOgG,IAAI,SAAAnE,GACT,IAAMgK,EAAYhK,EAAMgK,UAAUgC,OAAOJ,GACnCC,EAAW7B,EAAU/D,OAAS+D,EAAU,QAAKiC,EAE/CC,EAAa,GACbtL,EAAW,YAEf,GAAIiL,EAAU,CACZ,IAEMM,GAFaN,EAASrG,YAAckG,EAAOlG,YAAc,IAtC9C,SAAAwE,GACrB,GAAIA,EAAU/D,OAAQ,CACpB,IACMmG,EADiB,qBACMC,KAAKrC,EAAU,GAAG5E,WAE/C,OAAOgH,EAAQA,EAAM,GAAK,EAG5B,OAAO,EA+BiBE,CAAeT,IAG/BM,IACFvL,EAAWa,EAAQ0K,IAAaA,EAE5BlH,EAAQrE,KACVsL,EAAajH,EAAQrE,GAAUiF,UAKhC4F,EAAQ7K,KACX6K,EAAQ7K,GAAY,CAClB2L,WAAY,EACZC,aAAc,EACdC,kBAAmB,EACnBC,oBAAqB,EACrB9L,WACA+K,iBACAO,aACAzM,SAAU,KAId,IAAIE,EAAUoK,EAAa/J,GAAQiF,EAAQrE,IAAa,IAAIiF,QAASmE,GACrEyB,EAAQ7K,GAAUnB,SAASkN,KAAKhN,KAGpB8L,EACRA,EAAQ/F,eAAeqG,KACzBN,EAAQM,GAAGS,aAAef,EAAQM,GAAGtM,SAASmN,OAAO,SAACC,EAAD7E,GAAA,IAAQoC,EAARpC,EAAQoC,MAAOzJ,EAAfqH,EAAerH,SAAf,OAClDmM,YAAQ1C,EAAOzJ,GAAsBkM,EAAVA,EAAM,GAAS,GAE7CpB,EAAQM,GAAGQ,WAAad,EAAQM,GAAGtM,SAASmN,OAAO,SAACC,EAAD/M,GAAA,IAAQsK,EAARtK,EAAQsK,MAAOzJ,EAAfb,EAAea,SAAf,OACjDmM,YAAQ1C,EAAOzJ,GAAYkM,EAAM,EAAIA,GAAK,IAIhD,OAAOlQ,OAAOoQ,OAAOtB,IAMnBuB,CAA2BtB,EAAQjK,EAASM,GACzCiB,QAAQ,SAAAhD,GACP,IAAM8B,EAAS2J,EAAQzL,EAAMY,UAM7B6K,EAAQzL,EAAMY,UALTkB,EAKqB,CACxByK,WAAYzK,EAAOyK,WAAavM,EAAMuM,WACtCC,aAAc1K,EAAO0K,aAAexM,EAAMwM,aAC1CC,kBAAmB3K,EAAO2K,kBAAoBzM,EAAMyM,kBACpDC,oBAAqB5K,EAAO4K,oBAAsB1M,EAAM0M,oBACxD9L,SAAUkB,EAAOlB,SACjBnB,SAAQ,GAAAkE,OAAAhH,OAAAoH,EAAA,EAAApH,CAAMmF,EAAOrC,UAAb9C,OAAAoH,EAAA,EAAApH,CAA0BqD,EAAMP,YAVdO,MAelC,IAAMiN,EAAetQ,OAAOoQ,OAAOtB,GAChCmB,OAAO,SAACC,EAAKK,GAAN,OAAeL,EAAIlJ,OAAOuJ,IAAO,IAC3C,OAAOC,YAAgBF,mKClIVG,MA5Ef,SAAApF,GAA4C,IAA1B0D,EAA0B1D,EAA1B0D,OAAQ7L,EAAkBmI,EAAlBnI,eACxB,OACEwN,EAAAjQ,EAAAyJ,cAAAwG,EAAAjQ,EAAAmK,SAAA,KAEImE,EAAO/L,SACP0N,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,YACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,wBACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,4BAA4B2E,KAAK,SAC7C5B,EAAO/L,WAMd+L,EAAOlM,MACP6N,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,YACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,wBAEX+C,EAAOlM,KAAK2E,IAAI,SAAClB,EAAGsK,GAClB,IAAMC,EAAavK,EAAEsJ,WAAatJ,EAAEuJ,aAC9BiB,EAAU,SAACC,EAAQC,GACvB,SAAAhK,OAAU+J,EAAV,KAAA/J,OAA+B,IAAX+J,EAAeC,EAAf,GAAAhK,OAA4BgK,EAA5B,OAEtB,OACEN,EAAAjQ,EAAAyJ,cAAA,OAAKpB,IAAK8H,EAAG5E,UAAU,2BACrB0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,kCAAkC1F,EAAErC,UAEjDqC,EAAExD,SAAS0E,IAAI,SAACyJ,EAAGC,GACjB,OACER,EAAAjQ,EAAAyJ,cAAA,OAAKpB,IAAKoI,EAAGlF,UAAU,QAEnBiF,EAAElO,MACA2N,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,0BACZiF,EAAElO,OAEL2N,EAAAjQ,EAAAyJ,cAAAwG,EAAAjQ,EAAAmK,SAAA,KACE8F,EAAAjQ,EAAAyJ,cAAA,UAAQX,KAAK,SACXyC,UAAS,OAAAhF,OAASmJ,YAAQc,EAAExD,MAAOwD,EAAEjN,UAAY,aAAe,cAAvD,6BACTmN,QAAS,WAAQjO,EAAeoD,EAAG2K,KACjB,iBAAjBA,EAAElD,YACD2C,EAAAjQ,EAAAyJ,cAAA,QAAMkH,MAAM,gBACVV,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBrF,UAAU,cAAc7B,MAAO,CAAEmH,SAAU,IAAMC,KAAMC,OAG5Ed,EAAAjQ,EAAAyJ,cAAA,QAAM8B,UAAU,QAAhB,IAAAhF,OAA4BiK,EAAExN,KAAO,EAArC,KAAAuD,OAA0CiK,EAAErN,OAA5C,MACA8M,EAAAjQ,EAAAyJ,cAAA,QAAMkH,MAAK,GAAApK,OAAKiK,EAAErD,aAAezD,MAAO,CAAEsH,OAAQ,SAAlD,GAAAzK,OAAgEiK,EAAEjO,UACjEiO,EAAEvD,QAAUgD,EAAAjQ,EAAAyJ,cAACwH,EAAA,EAAD,CAAcjI,GAAE,IAAAzC,OAAM4J,EAAN,KAAA5J,OAAWkK,GAAK9E,KAAM6E,EAAEtD,SAAU3B,UAAU,OAAO7K,OAAO,SAASkL,IAAI,uBAAvF,IAA+G4E,EAAEvD,OAAjH,YASzBmD,GACFH,EAAAjQ,EAAAyJ,cAAA,qBAAAlD,OACQ8J,EAAQD,EAAY,SAD5B,MAAA7J,OACyC8J,EAAQxK,EAAEsJ,WAAY,SAD/D,MAAA5I,OAC4E8J,EAAQxK,EAAEuJ,aAAc,WADpG,aC/ChB8B,cACJ,SAAAA,EAAY7R,GAAO,IAAAC,EAAA,OAAAC,OAAA4R,EAAA,EAAA5R,CAAAE,KAAAyR,IACjB5R,EAAAC,OAAA6R,EAAA,EAAA7R,CAAAE,KAAAF,OAAA8R,EAAA,EAAA9R,CAAA2R,GAAAtR,KAAAH,KAAMJ,KAED+B,MAAQ,CACXnC,QAASI,EAAMJ,QACfC,IAAKG,EAAMH,IACXoS,UAA6B,+CAAlBjS,EAAMJ,QACjBsS,iBAAiB,EACjBC,qBAAqB,GAGvBlS,EAAK2F,gBAAkB3F,EAAK2F,gBAAgBF,KAArBxF,OAAAkS,EAAA,EAAAlS,CAAAD,IAXNA,iFAcD,IAAAa,EACSV,KAAK2B,MAAtBnC,EADQkB,EACRlB,QAASC,EADDiB,EACCjB,IACjBO,KAAKJ,MAAM4F,gBAAgBhG,EAASC,oCAG7B,IAAAwS,EAAAjS,KAAA6F,EACmE7F,KAAK2B,MAAvEnC,EADDqG,EACCrG,QAASC,EADVoG,EACUpG,IAAKoS,EADfhM,EACegM,UAAWC,EAD1BjM,EAC0BiM,gBAAiBC,EAD3ClM,EAC2CkM,oBAD3CG,EAEqHlS,KAAKJ,MAAzH+E,EAFDuN,EAECvN,aAAc/D,EAFfsR,EAEetR,SAAUwB,EAFzB8P,EAEyB9P,WAAYvB,EAFrCqR,EAEqCrR,SAAUC,EAF/CoR,EAE+CpR,QAAS4E,EAFxDwM,EAEwDxM,eAAgBtF,EAFxE8R,EAEwE9R,QAASuF,EAFjFuM,EAEiFvM,SAAU3C,EAF3FkP,EAE2FlP,eAAgByC,EAF3GyM,EAE2GzM,MAF3G1E,EAGUH,EAASgB,MAzBZ,MAyBPX,EAHAnB,OAAAqS,EAAA,EAAArS,CAAAiB,EAAA,MAKP,OACEyP,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,aACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,0BACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,wBACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,uDACb7B,MAAO,CAAEsH,OAAQ,WACjBN,QAAS,WAAQgB,EAAKhQ,SAAS,CAAE4P,WAAYA,MAF/C,cAIErB,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBrF,UAAU,OAAOuF,KAAMe,IAAc7I,GAAG,cACzDiH,EAAAjQ,EAAAyJ,cAAA,OAAKC,MAAO,CAAE7G,SAAU,WAAYiP,MAAO,GAAIC,IAAK,IACjDT,EAAYrB,EAAAjQ,EAAAyJ,cAAA,QAAMC,MAAO,CAAEmH,SAAU,GAAImB,WAAY,OAAQC,aAAc,IAA/D,QAAkF,KAC/FhC,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBE,KAAMQ,EAAYY,IAAcC,IAAc5G,UAAU,UAE3E0E,EAAAjQ,EAAAyJ,cAAC2I,EAAA,EAAD,CAASC,UAAU,QACjBC,OAAQf,EACRgB,UAAU,EACV7R,OAAO,YACP8R,OAAQ,WAAQd,EAAKhQ,SAAS,CAAE6P,iBAAkBA,MAJpD,4KAOyCtB,EAAAjQ,EAAAyJ,cAAA,KAAGkC,KAAK,oBAAoBjL,OAAO,SAASkL,IAAI,sBAAsBL,UAAU,eAAhF,aAG3C0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAW+F,EAAY,KAAO,YACjCrB,EAAAjQ,EAAAyJ,cAAA,YACEwG,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,cACb0E,EAAAjQ,EAAAyJ,cAAA,SAAOgJ,QAAQ,WAAf,WACAxC,EAAAjQ,EAAAyJ,cAAA,SACEX,KAAK,OACLyC,UAAU,eACVvC,GAAG,UACH0J,mBAAiB,YACjBC,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOnB,EAAKhQ,SAAS,CAAEzC,QAAS4T,EAAEnS,OAAOoS,SACnDC,aAAc9T,KAElBgR,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,cACb0E,EAAAjQ,EAAAyJ,cAAA,SAAOgJ,QAAQ,OAAf,YACAxC,EAAAjQ,EAAAyJ,cAAA,SACEX,KAAK,WACLyC,UAAU,eACVvC,GAAG,MACH2J,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOnB,EAAKhQ,SAAS,CAAExC,IAAK2T,EAAEnS,OAAOoS,SAC/CC,aAAc7T,KAElB+Q,EAAAjQ,EAAAyJ,cAAA,UACEX,KAAK,SACLyC,UAAU,kBACVmF,QAASjR,KAAKwF,iBAHhB,YAURgL,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,YACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,wBAEX7K,EACEuP,EAAAjQ,EAAAyJ,cAAAwG,EAAAjQ,EAAAmK,SAAA,KACE8F,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,eACb0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,SACb0E,EAAAjQ,EAAAyJ,cAAA,UACE8B,UAAU,eACVuH,MAAOzS,EACPuS,SAAU,SAACC,GAAD,OAAO1N,EAAe0N,EAAEnS,OAAOoS,QACzCE,SAAUnR,GAETuC,EAAa2C,IAAI,SAAClB,EAAGsK,GAAJ,OAChBF,EAAAjQ,EAAAyJ,cAAA,UAAQpB,IAAK8H,EAAG2C,MAAOjN,GAAIA,OAIjCoK,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,iBACb0E,EAAAjQ,EAAAyJ,cAAA,UACEX,KAAK,SACLyC,UAAU,wBACVoF,MAAM,QACND,QAASxL,EACT8N,SAAUnR,GACVoO,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBE,KAAMmC,SAI7BhD,EAAAjQ,EAAAyJ,cAAA,WACEwG,EAAAjQ,EAAAyJ,cAAA,UACEX,KAAK,SACLyC,UAAU,kBACVmF,QAAS7Q,EACTmT,SAAUnR,GAERA,EACEoO,EAAAjQ,EAAAyJ,cAAA,QAAM8B,UAAU,mCAAmC2E,KAAK,SAASgD,cAAY,SAC7EjD,EAAAjQ,EAAAyJ,cAAA,wBAIJ5H,EACEoO,EAAAjQ,EAAAyJ,cAAA,OAAKC,MAAO,CAAEmH,SAAU,GAAIsC,WAAY,SAAxC,oEAGAlD,EAAAjQ,EAAAyJ,cAAAwG,EAAAjQ,EAAAmK,SAAA,KACE8F,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBrF,UAAU,OAAOuF,KAAMe,IAAc7I,GAAG,kBACzDiH,EAAAjQ,EAAAyJ,cAAC2I,EAAA,EAAD,CAASC,UAAU,QACjBC,OAAQd,EACRe,UAAU,EACV7R,OAAO,gBACP8R,OAAQ,WAAQd,EAAKhQ,SAAS,CAAE8P,qBAAsBA,MAJxD,wCAUJlR,EAASD,IAAa4P,EAAAjQ,EAAAyJ,cAAC2J,EAAA,gBAAD,CACpBrK,KAAM9E,KAAKgD,UAAU3G,EAASD,IAC9BgT,OAAQ,kBAAMjO,EAAS,UAAW,YAClC6K,EAAAjQ,EAAAyJ,cAAA,UAAQX,KAAK,SAASyC,UAAU,kBAAkBoF,MAAM,gCACtDV,EAAAjQ,EAAAyJ,cAACmH,EAAA,EAAD,CAAiBrF,UAAU,OAAOuF,KAAMwC,MAAerD,EAAAjQ,EAAAyJ,cAAA,QAAM8B,UAAU,QAAhB,kBAMjE0E,EAAAjQ,EAAAyJ,cAAA,OAAK8B,UAAU,4BAA4B2E,KAAK,SAAhD,8CAMRD,EAAAjQ,EAAAyJ,cAAC8J,EAAD,CAAQjF,OAAQ/N,EAAQF,IAAa,GAAIoC,eAAgBA,YA3J5C2H,IAAMC,WA8KZ6G,uQC/LFxB,EAAU,SAAC1C,EAAOzJ,GAAR,OAAqByJ,GAAsB,IAAbzJ,GAqBxCwM,EAAkB,SAAAhP,GAAM,OACnCA,EAAOgG,IAAI,SAAAyM,GAAgC,IAA7BnR,EAA6BmR,EAA7BnR,SAAaoR,EAAgBlU,OAAAmU,EAAA,EAAAnU,CAAAiU,EAAA,cACnCG,EArBgB,SAAAtR,GASxB,OARmBA,EAAS0E,IAAI,SAAAyJ,GAAC,OAAIvM,KAAKgD,UAAUuJ,KACpBhB,OAAO,SAACoE,EAAO9D,GAI7C,OAH6B,IAAzB8D,EAAMvK,QAAQyG,IAChB8D,EAAMrE,KAAKO,GAEN8D,GACN,IAEiB7M,IAAI,SAAA8M,GAAC,OAAI5P,KAAKC,MAAM2P,KAYfC,CAAkBzR,GACnC+M,EAPgB,SAAA/M,GAAQ,OAChCA,EAASmN,OAAO,SAACC,EAAD/M,GAAA,IAAQsK,EAARtK,EAAQsK,MAAOzJ,EAAfb,EAAea,SAAf,OAA+BmM,EAAQ1C,EAAOzJ,GAAsBkM,EAAVA,EAAM,GAAS,GAMlEsE,CAAkBJ,GACjCxE,EAXc,SAAA9M,GAAQ,OAC9BA,EAASmN,OAAO,SAACC,EAAD7E,GAAA,IAAQoC,EAARpC,EAAQoC,MAAOzJ,EAAfqH,EAAerH,SAAf,OAA8BmM,EAAQ1C,EAAOzJ,GAAYkM,EAAM,EAAIA,GAAK,GAUnEuE,CAAgBL,GAEnC,OAAOpU,OAAA0U,EAAA,EAAA1U,CAAA,GACFkU,EADL,CAEEpR,SAAUsR,EACVxE,aACAC,oHCnBc8E,QACW,cAA7BC,OAAO1F,SAAS2F,UAEe,UAA7BD,OAAO1F,SAAS2F,UAEhBD,OAAO1F,SAAS2F,SAASpF,MACvB,2DCZNqF,IAASC,OAAOrE,EAAAjQ,EAAAyJ,cAACrK,EAAA,EAAD,MAASmV,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlQ,KAAK,SAAAmQ,GACjCA,EAAaC,6FE1GJ5D,IArBf,SAAArG,GAA8C,IAAtBkK,EAAsBlK,EAAtBkK,SAAazV,EAASE,OAAAmU,EAAA,EAAAnU,CAAAqL,EAAA,cAAAmK,EAChBC,oBAAS,GADOC,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAAwV,EAAA,GACrCzC,EADqC2C,EAAA,GAC7BE,EAD6BF,EAAA,GAG5C,OACEG,EAAApV,EAAAyJ,cAAA2L,EAAApV,EAAAmK,SAAA,KACEiL,EAAApV,EAAAyJ,cAAA,IAAOpK,EAAQyV,GACfM,EAAApV,EAAAyJ,cAAC4L,EAAA,EAAD,CAAShD,UAAU,MACjBC,OAAQA,EACR5R,OAAQrB,EAAM2J,GACdwJ,OAAQ,WAAQ2C,GAAW7C,KAH7B,mDCVN,IAAAhI,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAgL,EAAA/K,EAAA,IAAAgL,EAAAhL,EAAA,IAoBeiL,IAdf,SAAA5K,GAA8B,IAAZb,EAAYa,EAAZb,SAChB,OACES,EAAAxK,EAAAyJ,cAAA,OAAK8B,UAAS,2CAAAhF,OAA6CwD,EAAW,GAAK,eAAiBL,MAAO,CAAEmH,SAAU,GAAI4E,OAAQ,IACzHjL,EAAAxK,EAAAyJ,cAAC6L,EAAA,EAAD,CAActM,GAAG,UAAU2C,KAAI,gEAAApF,OAAkEmP,EAAYC,SAAWjV,OAAO,SAASkL,IAAI,uBACzI8J,EAAYC,SAFjB,MAGoBnL,EAAAxK,EAAAyJ,cAAC6L,EAAA,EAAD,CAActM,GAAG,UAAU2C,KAAK,6BAA6BjL,OAAO,SAASkL,IAAI,uBAAjF","file":"static/js/main.f7efc0e9.chunk.js","sourcesContent":["import React from 'react';\nimport { createIframeClient } from '@remixproject/plugin';\nimport { Client } from 'mythxjs';\nimport keccak from 'keccakjs';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Plugin from './components/Plugin';\nimport Footer from './components/Footer';\nimport Notifier from './components/Notifier';\nimport Home from './components/Home';\nimport { formatIssues } from './lib/report';\n\nconst separator = '::';\nconst storageKey = 'remix-mythx-plugin';\nconst TRIAL_CREDS = {\n  address: '0x0000000000000000000000000000000000000000',\n  pwd: 'trial'\n};\nconst token_invalid_msg = 'Access token has expired or is invalid! Please login again.';\n\nlet client = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const raw = localStorage.getItem(storageKey) || '{}';\n    const settings = JSON.parse(raw);\n    const address = settings.address || TRIAL_CREDS.address;\n\n    this.state = {\n      pluginOpen: false,\n      address,\n      pwd: settings.pwd || TRIAL_CREDS.pwd,\n      jwt: null,\n      compilations: {},\n      selected: '',\n      contractList: [],\n      mapping: {},\n      isAnalyzig: false,\n      analyses: {},\n      reports: {},\n      alerts: []\n    };\n\n    client = createIframeClient();\n    client.onload(() => {\n      this.setState({ pluginOpen: true });\n\n      client.call('solidity', 'getCompilationResult')\n        .then((result) => {\n          if (!result) {\n            return;\n          }\n\n          const { data, source } = result;\n\n          if (!source) {\n            return;\n          }\n\n          this.processCompilation(source.target, source, data);\n        });\n\n      client.on('solidity', 'compilationFinished', (target, source, _, data) => {\n        this.processCompilation(target, source, data);\n      });\n    })\n\n    this.processCompilation = this.processCompilation.bind(this);\n    this.login = this.login.bind(this);\n    this.saveCredentials = this.saveCredentials.bind(this);\n    this.analyze = this.analyze.bind(this);\n    this.getRequestData = this.getRequestData.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n    this.highlightIssue = this.highlightIssue.bind(this);\n    this.clear = this.clear.bind(this);\n    this.selectContract = this.selectContract.bind(this);\n    this.addAlert = this.addAlert.bind(this);\n    this.dismissAlert = this.dismissAlert.bind(this);\n  }\n\n  processCompilation(target, source, data) {\n    const { compilations, contractList, mapping } = this.state;\n\n    const { contracts = [] } = data;\n    const file = contracts[target];\n    const fileMapping = {};\n\n    Object.keys(file).forEach(x => {\n      const bytecode = file[x].evm.deployedBytecode.object;\n      const hash = new keccak(256);\n      hash.update(Buffer.from(bytecode, 'hex'));\n\n      fileMapping[target] = target;\n      fileMapping[`0x${hash.digest('hex')}`] = target;\n    })\n\n    const list = Object.keys(data.contracts[target]);\n    const contractSet = new Set([...contractList, ...this.getContracts(data, target)]);\n    this.setState({\n      compilations: { ...compilations, [target]: { source, data } },\n      selected: `${target}${separator}${list[0]}`,\n      contractList: Array.from(contractSet),\n      mapping: { ...mapping, ...fileMapping }\n    });\n  }\n\n  getContracts(data, target) {\n    const { contracts = [] } = data;\n    var file = contracts[target] || {};\n    return Object.keys(file).map(x => `${target}${separator}${x}`);\n  }\n\n  saveCredentials(address, pwd) {\n    this.setState({ address, pwd });\n    localStorage.setItem(storageKey, JSON.stringify({ address, pwd }));\n    this.addAlert('success', 'Saved');\n  }\n\n  analyze = async () => {\n    const { address, pwd, compilations, selected, analyses, reports } = this.state;\n    const [target] = selected.split(separator);\n\n    const mythx = new Client(address, pwd, 'remythx');\n    const jwt = await this.login(mythx);\n\n    this.setState({\n      analyses: { ...analyses, [selected]: null },\n      isAnalyzig: true,\n      jwt\n    });\n    await client.call('editor', 'discardHighlight');\n\n    try {\n      const options = this.getRequestData();\n      const analysis = await mythx.analyze(options);\n      const issues = await mythx.getDetectedIssues(analysis.uuid);\n\n      this.setState({\n        analyses: { ...analyses, [selected]: issues },\n        isAnalyzig: false\n      });\n\n      this.handleResult(compilations[target].source, issues);\n    } catch (err) {\n      this.setState({\n        analyses: { ...analyses, [selected]: null },\n        reports: {\n          ...reports,\n          [selected]: {\n            list: [{\n              messages: [{\n                error: err.message || err\n              }]\n            }]\n          }\n        },\n        isAnalyzig: false\n      });\n    }\n  }\n\n  login(client) {\n    let jwt = this.state.jwt;\n\n    if (jwt) {\n      try {\n        client.loginWithToken(jwt);\n        return jwt;\n      } catch (err) {\n        if (err.message !== token_invalid_msg) {\n          throw err;\n        }\n      }\n    }\n\n    return client.login();\n  }\n\n  getRequestData() {\n    const { compilations, selected } = this.state;\n    const [target, contract] = selected.split(separator);\n    const { data = {}, source = {} } = compilations[target];\n    const { contracts = [], sources = {} } = data;\n\n    const file = contracts[target];\n    const bytecode = file[contract].evm.bytecode;\n    const deployedBytecode = file[contract].evm.deployedBytecode;\n    const request = {\n      contractName: contract,\n      bytecode: bytecode.object,\n      sourceMap: bytecode.sourceMap,\n      deployedBytecode: deployedBytecode.object,\n      deployedSourceMap: deployedBytecode.sourceMap,\n      analysisMode: 'quick',\n      mainSource: target,\n      sourceList: Object.keys(source.sources),\n      sources: {}\n    };\n\n    for (let key in source.sources) {\n      if (source.sources.hasOwnProperty(key)) {\n        const ast = sources[key].ast;\n        const src = source.sources[key].content;\n\n        request.sources[key] = { ast, source: src };\n      }\n    }\n\n    return request;\n  }\n\n  handleResult(data, result) {\n    const { selected, reports, mapping } = this.state;\n    const uniqueIssues = formatIssues(data, mapping, result);\n\n    if (uniqueIssues.length === 0) {\n      this.setState({\n        reports: {\n          ...reports,\n          [selected]: {\n            message: `✔ No errors/warnings found in ${selected}`\n          }\n        }\n      });\n    } else {\n      this.setState({\n        reports: {\n          ...reports,\n          [selected]: {\n            list: uniqueIssues\n          }\n        }\n      });\n    }\n  }\n\n  highlightIssue = async (issue, message) => {\n    if (message.line < 0) {\n      return;\n    }\n\n    const position = {\n      start: { line: message.line, column: message.column },\n      end: { line: message.endLine, column: message.endCol }\n    }\n    const color = message.severity === 1 ? '#ffd300' : '#ff0000';\n    await client.call('editor', 'highlight', position, issue.filePath, color);\n  }\n\n  clear() {\n    this.setState({\n      compilations: {},\n      selected: '',\n      contractList: [],\n      mapping: {},\n      analyses: {},\n      reports: {}\n    });\n  }\n\n  selectContract(contract) {\n    this.setState({ selected: contract });\n  }\n\n  addAlert(type, text) {\n    this.setState({\n      alerts: [...this.state.alerts, {\n        id: (new Date()).getTime(),\n        type: type,\n        message: text\n      }]\n    });\n  }\n\n  dismissAlert(alert) {\n    const { alerts } = this.state;\n    const idx = alerts.indexOf(alert);\n\n    if (idx >= 0) {\n      this.setState({\n        alerts: [...alerts.slice(0, idx), ...alerts.slice(idx + 1)]\n      });\n    }\n  }\n\n  render() {\n    const { pluginOpen, alerts } = this.state;\n\n    const content = pluginOpen ?\n      <div style={{ position: 'relative', minHeight: '100vh' }}>\n        <main>\n          <Plugin {...this.state}\n            saveCredentials={this.saveCredentials}\n            selectContract={this.selectContract}\n            analyze={this.analyze}\n            addAlert={this.addAlert}\n            highlightIssue={this.highlightIssue}\n            clear={this.clear} />\n        </main>\n        <Footer isPlugin />\n        <Notifier alerts={alerts} onDismiss={this.dismissAlert} />\n      </div> :\n      <Home />;\n\n    return (\n      <>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertList } from 'react-bs-notifier';\n\nfunction Notifier({ alerts, onDismiss }) {\n  return (\n    <AlertList\n      position='bottom-right'\n      alerts={alerts}\n      timeout={3000}\n      onDismiss={onDismiss}\n      showIcon={false}\n    />\n  );\n}\n\nNotifier.propTypes = {\n  alerts: PropTypes.array.isRequired,\n  onDismiss: PropTypes.func.isRequired\n};\n\nexport default Notifier;","import React from 'react';\n\nimport Footer from './Footer';\nimport remixLogo from './../images/remix.svg';\nimport mythxLogo from './../images/mythx.png';\nimport plus from './../images/plus.svg';\n\nfunction Home() {\n  return (\n    <>\n      <div className='h-100'\n        style={{ background: '#012A3E' }}>\n        <div className='d-flex align-items-end flex-column' style={{ height: '50%' }}>\n          <div className='mt-auto pb-5 w-100'>\n            <h1 className='display-1 text-white'\n              style={{ textAlign: 'center' }}>re:MythX</h1>\n          </div>\n        </div>\n        <div className='text-center pt-4'>\n          <a href='https://remix.ethereum.org' target='_blank' rel='noopener noreferrer'>\n            <img src={remixLogo} alt='remix' style={{ height: 120, width: 120, verticalAlign: 'top' }} />\n          </a>\n          <img src={plus} alt='plus' className='pl-5 pr-5' style={{ height: 100, width: 140 }} />\n          <a href='https://mythx.io/' target='_blank' rel='noopener noreferrer'>\n            <img src={mythxLogo} alt='mythx' style={{ height: 130, width: 180, verticalAlign: 'top' }} />\n          </a>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Home","module.exports = __webpack_public_path__ + \"static/media/remix.0cc3e824.svg\";","module.exports = __webpack_public_path__ + \"static/media/mythx.5fc6cc7c.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.bd770134.svg\";","import SourceMappingDecoder from 'remix-lib/src/sourceMappingDecoder';\n\nimport { isFatal, getUniqueIssues } from './eslint';\n\nconst mythx2Severity = {\n  High: 2,\n  Medium: 1,\n};\n\nconst decoder = new SourceMappingDecoder();\n\n/**\n * Turn a srcmap entry (the thing between semicolons) into a line and\n * column location.\n * We make use of this.sourceMappingDecoder of this class to make\n * the conversion.\n *\n * @param {string} srcEntry - a single entry of solc sourceMap\n * @param {Array} lineBreakPositions - array returned by the function 'mapLineBreakPositions'\n * @returns {line: number, column: number}\n */\nconst textSrcEntry2lineColumn = (srcEntry, lineBreakPositions) => {\n  const ary = srcEntry.split(':');\n  const sourceLocation = {\n    length: parseInt(ary[1], 10),\n    start: parseInt(ary[0], 10),\n  };\n  const loc = decoder.convertOffsetToLineColumn(sourceLocation, lineBreakPositions);\n  return [loc.start, loc.end];\n};\n\n/**\n * Convert a MythX issue into an ESLint-style issue.\n * The eslint report format which we use, has these fields:\n *\n * - column,\n * - endCol,\n * - endLine,\n * - fatal,\n * - line,\n * - message,\n * - description,\n * - ruleId,\n * - ruleLink,\n * - severity\n *\n * but a MythX JSON report has these fields:\n *\n * - description.head\n * - description.tail\n * - locations\n * - severity\n * - swcId\n * - swcTitle\n *\n * @param {object} issue - the MythX issue we want to convert\n * @param {string} source - holds the contract code\n * @returns eslint-issue object\n */\nconst issue2EsLint = (issue, source, locations) => {\n  let swcLink;\n\n  if (!issue.swcID) {\n    swcLink = 'N/A';\n  } else {\n    swcLink = 'https://smartcontractsecurity.github.io/SWC-registry/docs/' + issue.swcID;\n  }\n\n  const esIssue = {\n    fatal: false,\n    ruleId: issue.swcID,\n    ruleLink: swcLink,\n    message: `${issue.description.head}`,\n    description: `${issue.description.tail}`,\n    severity: mythx2Severity[issue.severity] || 1,\n    line: -1,\n    column: 0,\n    endLine: -1,\n    endCol: 0,\n    sourceType: ''\n  };\n\n  if (source) {\n    let startLineCol, endLineCol;\n    const lineBreakPositions = decoder.getLinebreakPositions(source);\n\n    if (locations.length) {\n      const srcEntry = locations[0].sourceMap.split(';')[0];\n      [startLineCol, endLineCol] = textSrcEntry2lineColumn(srcEntry, lineBreakPositions);\n      esIssue.sourceType = locations[0].sourceType;\n    }\n\n    if (startLineCol) {\n      esIssue.line = startLineCol.line;\n      esIssue.column = startLineCol.column;\n      esIssue.endLine = endLineCol.line;\n      esIssue.endCol = endLineCol.column;\n    }\n  }\n\n  return esIssue;\n};\n\n/**\n * Gets the source index from the issue sourcemap\n * \n * @param {object[]} locations - array of text-only MythX API issue locations\n * @returns {number}\n */\nconst getSourceIndex = locations => {\n  if (locations.length) {\n    const sourceMapRegex = /(\\d+):(\\d+):(\\d+)/g;\n    const match = sourceMapRegex.exec(locations[0].sourceMap);\n    // Ignore `-1` source index for compiler generated code\n    return match ? match[3] : 0;\n  }\n\n  return 0;\n};\n\n\n/**\n * Converts MythX analyze API output item to Eslint compatible object\n * @param {object} report - issue item from the collection MythX analyze API output\n * @param {object} data - Contains array of solidity contracts source code and the input filepath of contract\n * @returns {object}\n */\nconst convertMythXReport2EsIssue = (report, mapping, data) => {\n  const { issues } = report;\n  const { sources, functionHashes } = data;\n  const results = {};\n\n  const textLocationFilterFn = location => (\n    (location.sourceType === 'solidity-file')\n    &&\n    (location.sourceFormat === 'text')\n  );\n\n  // eslint-disable-next-line array-callback-return\n  issues.map(issue => {\n    const locations = issue.locations.filter(textLocationFilterFn);\n    const location = locations.length ? locations[0] : undefined;\n\n    let sourceCode = '';\n    let filePath = '<unknown>';\n\n    if (location) {\n      const sourceList = location.sourceList || report.sourceList || [];\n      const sourceIndex = getSourceIndex(location);\n      const fileName = sourceList[sourceIndex];\n\n      if (fileName) {\n        filePath = mapping[fileName] || fileName;\n\n        if (sources[filePath]) {\n          sourceCode = sources[filePath].content;\n        }\n      }\n    }\n\n    if (!results[filePath]) {\n      results[filePath] = {\n        errorCount: 0,\n        warningCount: 0,\n        fixableErrorCount: 0,\n        fixableWarningCount: 0,\n        filePath,\n        functionHashes,\n        sourceCode,\n        messages: [],\n      };\n    }\n\n    let message = issue2EsLint(issue, (sources[filePath] || {}).content, locations);\n    results[filePath].messages.push(message);\n  });\n\n  for (let k in results) {\n    if (results.hasOwnProperty(k)) {\n      results[k].warningCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n      results[k].errorCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        isFatal(fatal, severity) ? acc + 1 : acc, 0);\n    }\n  }\n\n  return Object.values(results);\n};\n\nexport const formatIssues = (data, mapping, issues) => {\n  const results = {};\n  issues.forEach(report => {\n    convertMythXReport2EsIssue(report, mapping, data)\n      .forEach(issue => {\n        const result = results[issue.filePath];\n        if (!result) {\n          results[issue.filePath] = issue;\n          return;\n        }\n\n        results[issue.filePath] = {\n          errorCount: result.errorCount + issue.errorCount,\n          warningCount: result.warningCount + issue.warningCount,\n          fixableErrorCount: result.fixableErrorCount + issue.fixableErrorCount,\n          fixableWarningCount: result.fixableWarningCount + issue.fixableWarningCount,\n          filePath: result.filePath,\n          messages: [...result.messages, ...issue.messages],\n        };\n      });\n  });\n\n  const eslintIssues = Object.values(results)\n    .reduce((acc, curr) => acc.concat(curr), []);\n  return getUniqueIssues(eslintIssues);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\n\nimport ExternalLink from './ExternalLink';\nimport { isFatal } from './../lib/eslint';\n\nfunction Report({ report, highlightIssue }) {\n  return (\n    <>\n      {\n        report.message &&\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <div className=\"alert alert-success w-100\" role=\"alert\">\n              {report.message}\n            </div>\n          </div>\n        </div>\n      }\n      {\n        report.list &&\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              report.list.map((x, i) => {\n                const issueCount = x.errorCount + x.warningCount;\n                const summary = (amount, caption) => {\n                  return `${amount} ${amount === 1 ? caption : `${caption}s`}`;\n                };\n                return (\n                  <div key={i} className=\"border-bottom pt-2 pb-2\">\n                    <div className=\"text-truncate font-weight-bold\">{x.filePath}</div>\n                    {\n                      x.messages.map((m, j) => {\n                        return (\n                          <div key={j} className=\"pl-3\">\n                            {\n                              m.error ?\n                                <div className=\"alert alert-danger p-1\">\n                                  {m.error}\n                                </div> :\n                                <>\n                                  <button type=\"button\"\n                                    className={`btn ${isFatal(m.fatal, m.severity) ? \"btn-danger\" : \"btn-warning\"} text-left p-1 mb-1 w-100`}\n                                    onClick={() => { highlightIssue(x, m); }}>\n                                    {m.sourceType === \"raw-bytecode\" &&\n                                      <span title=\"raw-bytecode\">\n                                        <FontAwesomeIcon className=\"float-right\" style={{ fontSize: 10 }} icon={faCode} />\n                                      </span>\n                                    }\n                                    <span className=\"pr-2\">{`[${m.line + 1}:${m.column}]`}</span>\n                                    <span title={`${m.description}`} style={{ cursor: 'help' }}>{`${m.message}`}</span>\n                                    {m.ruleId && <ExternalLink id={`i${i}_${j}`} href={m.ruleLink} className=\"pl-1\" target=\"_blank\" rel=\"noopener noreferrer\">[{m.ruleId}]</ExternalLink>}\n                                  </button>\n                                </>\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                    {\n                      !!issueCount &&\n                      <div>\n                        {`✖ ${summary(issueCount, 'issue')} (${summary(x.errorCount, 'error')}, ${summary(x.warningCount, 'warning')})`}\n                      </div>\n                    }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      }\n    </>\n  );\n}\n\nReport.propTypes = {\n  report: PropTypes.object.isRequired,\n  highlightIssue: PropTypes.func.isRequired\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInfoCircle,\n  faAngleRight,\n  faAngleDown,\n  faClipboard,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport Report from './Report';\n\nconst separator = '::';\n\nclass Plugin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: props.address,\n      pwd: props.pwd,\n      creadOpen: props.address === '0x0000000000000000000000000000000000000000',\n      infoTooltipOpen: false,\n      analysisTooltipOpen: false\n    };\n\n    this.saveCredentials = this.saveCredentials.bind(this);\n  }\n\n  saveCredentials() {\n    const { address, pwd } = this.state;\n    this.props.saveCredentials(address, pwd);\n  }\n\n  render() {\n    const { address, pwd, creadOpen, infoTooltipOpen, analysisTooltipOpen } = this.state;\n    const { contractList, selected, isAnalyzig, analyses, reports, selectContract, analyze, addAlert, highlightIssue, clear } = this.props;\n    const [target] = selected.split(separator);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row border-bottom pb-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <div className=\"btn btn-light btn-block text-left rounded-0 border-0\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => { this.setState({ creadOpen: !creadOpen }) }}>\n              Credentials\n              <FontAwesomeIcon className=\"ml-2\" icon={faInfoCircle} id=\"cred_info\" />\n              <div style={{ position: 'absolute', right: 24, top: 4 }}>\n                {creadOpen ? <span style={{ fontSize: 14, lineHeight: '16px', paddingRight: 6 }}>hide</span> : null}\n                <FontAwesomeIcon icon={creadOpen ? faAngleDown : faAngleRight} className='pt-1' />\n              </div>\n              <Tooltip placement=\"right\"\n                isOpen={infoTooltipOpen}\n                autohide={false}\n                target=\"cred_info\"\n                toggle={() => { this.setState({ infoTooltipOpen: !infoTooltipOpen }); }}>\n                In order to use MythX APIs you need to have credentials.\n                You can use the trial credential, but analysis's result will be limited.\n                In order to get credential you need to <a href=\"https://mythx.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-nowrap\">sign up</a>\n              </Tooltip>\n            </div>\n            <div className={creadOpen ? null : \"collapse\"}>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">Address</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Address\"\n                    onChange={(e) => this.setState({ address: e.target.value })}\n                    defaultValue={address} />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"pwd\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"pwd\"\n                    placeholder=\"Password\"\n                    onChange={(e) => this.setState({ pwd: e.target.value })}\n                    defaultValue={pwd} />\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={this.saveCredentials}>\n                  Save\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              target ?\n                <>\n                  <div className=\"d-flex pb-3\">\n                    <div className=\"w-100\">\n                      <select\n                        className=\"form-control\"\n                        value={selected}\n                        onChange={(e) => selectContract(e.target.value)}\n                        disabled={isAnalyzig}\n                      >\n                        {contractList.map((x, i) =>\n                          <option key={i} value={x}>{x}</option>\n                        )}\n                      </select>\n                    </div>\n                    <div className=\"flex-shrink-1\">\n                      <button\n                        type=\"button\"\n                        className=\"form-control btn ml-2\"\n                        title=\"Clear\"\n                        onClick={clear}\n                        disabled={isAnalyzig}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </button>\n                    </div>\n                  </div>\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={analyze}\n                      disabled={isAnalyzig}>\n                      {\n                        isAnalyzig ?\n                          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> :\n                          <span>Analyze</span>\n                      }\n                    </button>\n                    {\n                      isAnalyzig ?\n                        <div style={{ fontSize: 14, fontWeight: 'bold' }}>\n                          We are analyzing your contract. This should take up to 2 minutes\n                        </div> :\n                        <>\n                          <FontAwesomeIcon className=\"ml-2\" icon={faInfoCircle} id=\"analysis_info\" />\n                          <Tooltip placement=\"right\"\n                            isOpen={analysisTooltipOpen}\n                            autohide={true}\n                            target=\"analysis_info\"\n                            toggle={() => { this.setState({ analysisTooltipOpen: !analysisTooltipOpen }); }}>\n                            Analysis can take couple of minutes\n                          </Tooltip>\n                        </>\n                    }\n                    {\n                      analyses[selected] && <CopyToClipboard\n                        text={JSON.stringify(analyses[selected])}\n                        onCopy={() => addAlert('success', 'Copied')}>\n                        <button type=\"button\" className=\"btn float-right\" title=\"Copy raw report to clipboard\">\n                          <FontAwesomeIcon className=\"ml-2\" icon={faClipboard} /><span className=\"pl-1\">Raw report</span>\n                        </button>\n                      </CopyToClipboard>\n                    }\n                  </div>\n                </> :\n                <div className=\"alert alert-warning w-100\" role=\"alert\">\n                  You need to compile your contract first!\n                </div>\n            }\n          </div>\n        </div>\n        <Report report={reports[selected] || {}} highlightIssue={highlightIssue} />\n      </div>\n    );\n  }\n}\n\nPlugin.propTypes = {\n  addAlert: PropTypes.func.isRequired,\n  contractList: PropTypes.array.isRequired,\n  selected: PropTypes.string.isRequired,\n  isAnalyzig: PropTypes.bool.isRequired,\n  analyses: PropTypes.object.isRequired,\n  reports: PropTypes.object.isRequired,\n  saveCredentials: PropTypes.func.isRequired,\n  selectContract: PropTypes.func.isRequired,\n  highlightIssue: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired\n};\n\nexport default Plugin;\n","export const isFatal = (fatal, severity) => fatal || severity === 2;\n\nconst getUniqueMessages = messages => {\n  const jsonValues = messages.map(m => JSON.stringify(m));\n  const uniuqeValues = jsonValues.reduce((accum, curr) => {\n    if (accum.indexOf(curr) === -1) {\n      accum.push(curr);\n    }\n    return accum;\n  }, []);\n\n  return uniuqeValues.map(v => JSON.parse(v));\n};\n\nconst calculateErrors = messages =>\n  messages.reduce((acc, { fatal, severity }) => isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\nconst calculateWarnings = messages =>\n  messages.reduce((acc, { fatal, severity }) => !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n\nexport const getUniqueIssues = issues =>\n  issues.map(({ messages, ...restProps }) => {\n    const uniqueMessages = getUniqueMessages(messages);\n    const warningCount = calculateWarnings(uniqueMessages);\n    const errorCount = calculateErrors(uniqueMessages);\n\n    return {\n      ...restProps,\n      messages: uniqueMessages,\n      errorCount,\n      warningCount,\n    };\n  });","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'reactstrap';\n\nfunction ExternalLink({ children, ...props }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <a {...props}>{children}</a>\n      <Tooltip placement='top'\n        isOpen={isOpen}\n        target={props.id}\n        toggle={() => { setIsOpen(!isOpen); }}>\n        CTRL + Click\n      </Tooltip>\n    </>\n  );\n}\n\nExternalLink.propTypes = {\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\n\nexport default ExternalLink;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ExternalLink from './ExternalLink';\nimport packageJson from './../../package.json';\n\nfunction Footer({ isPlugin }) {\n  return (\n    <div className={`position-absolute text-center w-100 pb-1${isPlugin ? '' : ' text-white'}`} style={{ fontSize: 12, bottom: 0 }}>\n      <ExternalLink id='version' href={`https://github.com/aquiladev/remix-mythx-plugin/releases/tag/${packageJson.version}`} target='_block' rel='noopener noreferrer'>\n        {packageJson.version}\n      </ExternalLink> | <ExternalLink id='support' href='https://discord.gg/VhdtjCh' target='_blank' rel='noopener noreferrer'>Get support</ExternalLink>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  isPlugin: PropTypes.bool\n};\n\nexport default Footer;"],"sourceRoot":""}