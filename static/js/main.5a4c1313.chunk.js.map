{"version":3,"sources":["components/Plugin.js","lib/report.js","components/Report.js","images/remix.svg","images/mythx.png","images/plus.svg","lib/eslint.js","components/Footer.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["separator","storageKey","TRIAL_CREDS","address","pwd","token_invalid_msg","Plugin","props","_this","Object","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","analyze","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__","_home_circleci_repo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","_this$state","compilations","selected","analyses","reports","_selected$split","_selected$split2","target","mythx","jwt","options","analysis","issues","wrap","_context","prev","next","state","split","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","Client","login","sent","setState","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","isAnalyzig","client","editor","discardHighlight","getRequestData","getDetectedIssues","uuid","handleResult","source","t0","list","messages","error","message","stop","loginWithToken","err","raw","localStorage","getItem","settings","JSON","parse","contractList","mapping","creadOpen","infoTooltipOpen","init","bind","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","processCompilation","saveCredentials","highlightIssue","_this2","solidity","getCompilationResult","then","result","data","on","_","_this$state2","_data$contracts","contracts","file","fileMapping","keys","forEach","x","bytecode","evm","deployedBytecode","object","hash","keccak","update","Buffer","from","concat","digest","contractSet","Set","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getContracts","Array","_data$contracts2","map","_this$state3","setItem","stringify","_this$state4","_selected$split3","_selected$split4","contract","_compilations$target","_compilations$target$","_compilations$target$2","_data$contracts3","_data$sources","sources","request","contractName","sourceMap","deployedSourceMap","analysisMode","mainSource","sourceList","reduce","flag","s","ast","key","hasOwnProperty","content","_this$state5","uniqueIssues","formatIssues","length","issue","position","start","line","column","end","endLine","endCol","color","severity","highlight","filePath","_this3","_this$state6","_selected$split5","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","className","style","cursor","onClick","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_15__","icon","faInfoCircle","id","faAngleDown","faAngleRight","right","top","reactstrap__WEBPACK_IMPORTED_MODULE_14__","placement","isOpen","autohide","toggle","href","rel","htmlFor","type","aria-describedby","placeholder","onChange","e","value","defaultValue","Fragment","disabled","i","role","aria-hidden","analysisTooltipOpen","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_17__","text","title","faClipboard","_Report__WEBPACK_IMPORTED_MODULE_20__","report","React","Component","mythx2Severity","High","Medium","decoder","SourceMappingDecoder","issue2EsLint","swcLink","swcID","startLineCol","endLineCol","esIssue","fatal","ruleId","ruleLink","description","head","tail","mythXseverity","lineBreakPositions","getLinebreakPositions","locations","_textSrcEntry2lineCol","srcEntry","ary","sourceLocation","parseInt","loc","convertOffsetToLineColumn","textSrcEntry2lineColumn","_textSrcEntry2lineCol2","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","results","k","sourceIndex","match","exec","getSourceIndex","replace","errorCount","warningCount","fixableErrorCount","fixableWarningCount","push","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","sourceType","acc","_ref","isFatal","_ref2","values","convertMythXReport2EsIssue","eslintIssues","curr","getUniqueIssues","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__","_lib_eslint__WEBPACK_IMPORTED_MODULE_3__","Report","issueCount","summary","amount","caption","m","j","fontSize","faCode","module","exports","p","_ref3","restProps","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","uniqueMessages","accum","indexOf","v","getUniqueMessages","calculateWarnings","calculateErrors","_home_circleci_repo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Footer","isPlugin","react_default","bottom","packageJson","version","Home","background","height","textAlign","src","remixLogo","alt","width","verticalAlign","plus","mythxLogo","components_Footer","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","plugin","createIframeClient","customApi","remixApi","devMode","port","onload","minHeight","components_Home","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a4c1313.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Client } from 'mythxjs';\nimport { Tooltip } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInfoCircle,\n  faAngleRight,\n  faAngleDown,\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport keccak from 'keccakjs';\n\nimport { formatIssues } from './../lib/report';\nimport Report from './Report';\n\nconst separator = '::';\nconst storageKey = 'remix-mythx-plugin';\nconst TRIAL_CREDS = {\n  address: '0x0000000000000000000000000000000000000000',\n  pwd: 'trial'\n};\nconst token_invalid_msg = 'Access token has expired or is invalid! Please login again.';\n\nclass Plugin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const raw = localStorage.getItem(storageKey) || '{}';\n    const settings = JSON.parse(raw);\n\n    const address = settings.address || TRIAL_CREDS.address;\n    this.state = {\n      address,\n      pwd: settings.pwd || TRIAL_CREDS.pwd,\n      jwt: null,\n      compilations: {},\n      selected: '',\n      contractList: [],\n      mapping: {},\n      isAnalyzig: false,\n      analyses: {},\n      reports: {},\n      creadOpen: address === TRIAL_CREDS.address,\n      infoTooltipOpen: false\n    };\n\n    this.init = this.init.bind(this);\n    this.processCompilation = this.processCompilation.bind(this);\n    this.login = this.login.bind(this);\n    this.saveCredentials = this.saveCredentials.bind(this);\n    this.analyze = this.analyze.bind(this);\n    this.getRequestData = this.getRequestData.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n    this.highlightIssue = this.highlightIssue.bind(this);\n\n    this.init();\n  }\n\n  init() {\n    const { client } = this.props;\n\n    client.solidity.getCompilationResult()\n      .then((result) => {\n        if (!result) {\n          return;\n        }\n\n        const { data, source } = result;\n\n        if (!source) {\n          return;\n        }\n\n        this.processCompilation(source.target, source, data);\n      });\n\n    client.on('solidity', 'compilationFinished', (target, source, _, data) => {\n      this.processCompilation(target, source, data);\n    });\n  }\n\n  processCompilation(target, source, data) {\n    const { compilations, contractList, mapping } = this.state;\n\n    const { contracts = [] } = data;\n    const file = contracts[target];\n    const fileMapping = {};\n\n    Object.keys(file).forEach(x => {\n      const bytecode = file[x].evm.deployedBytecode.object;\n      const hash = new keccak(256);\n      hash.update(Buffer.from(bytecode, 'hex'));\n\n      fileMapping[target] = target;\n      fileMapping[`0x${hash.digest('hex')}`] = target;\n    })\n\n    const list = Object.keys(data.contracts[target]);\n    const contractSet = new Set([...contractList, ...this.getContracts(data, target)]);\n    this.setState({\n      compilations: { ...compilations, [target]: { source, data } },\n      selected: `${target}${separator}${list[0]}`,\n      contractList: Array.from(contractSet),\n      mapping: { ...mapping, ...fileMapping }\n    });\n  }\n\n  getContracts(data, target) {\n    const { contracts = [] } = data;\n    var file = contracts[target] || {};\n    return Object.keys(file).map(x => `${target}${separator}${x}`);\n  }\n\n  saveCredentials() {\n    const { address, pwd } = this.state;\n    localStorage.setItem(storageKey, JSON.stringify({ address, pwd }));\n  }\n\n  analyze = async () => {\n    const { address, pwd, compilations, selected, analyses, reports } = this.state;\n    const [target] = selected.split(separator);\n\n    const mythx = new Client(address, pwd, \"remythx\");\n    const jwt = await this.login(mythx);\n\n    this.setState({\n      analyses: { ...analyses, [selected]: null },\n      isAnalyzig: true,\n      jwt\n    });\n    await this.props.client.editor.discardHighlight();\n\n    try {\n      const options = this.getRequestData();\n      const analysis = await mythx.analyze(options);\n      const issues = await mythx.getDetectedIssues(analysis.uuid);\n\n      this.setState({\n        analyses: { ...analyses, [selected]: issues },\n        isAnalyzig: false\n      });\n\n      this.handleResult(compilations[target].source, issues);\n    } catch (err) {\n      this.setState({\n        analyses: { ...analyses, [selected]: null },\n        reports: {\n          ...reports,\n          [selected]: {\n            list: [{\n              messages: [{\n                error: err.message || err\n              }]\n            }]\n          }\n        },\n        isAnalyzig: false\n      });\n    }\n  }\n\n  login = (client) => {\n    let jwt = this.state.jwt;\n\n    if (jwt) {\n      try {\n        client.loginWithToken(jwt);\n        return jwt;\n      } catch (err) {\n        if (err.message !== token_invalid_msg) {\n          throw err;\n        }\n      }\n    }\n\n    return client.login();\n  }\n\n  getRequestData() {\n    const { compilations, selected } = this.state;\n    const [target, contract] = selected.split(separator);\n    const { data = {}, source = {} } = compilations[target];\n    const { contracts = [], sources = {} } = data;\n\n    const file = contracts[target];\n    const bytecode = file[contract].evm.bytecode;\n    const deployedBytecode = file[contract].evm.deployedBytecode;\n    const request = {\n      contractName: contract,\n      bytecode: bytecode.object,\n      sourceMap: bytecode.sourceMap,\n      deployedBytecode: deployedBytecode.object,\n      deployedSourceMap: deployedBytecode.sourceMap,\n      analysisMode: \"quick\",\n      mainSource: target,\n      sourceList: Object.keys(source.sources),\n      sources: {}\n    };\n\n    var useAST = Object.keys(sources).reduce(function (flag, s) {\n      return flag && !!sources[s].ast;\n    }, true);\n\n    if (useAST) {\n      for (let key in source.sources) {\n        if (source.sources.hasOwnProperty(key)) {\n          request.sources[key] = { ast: sources[key].ast };\n        }\n      }\n    }\n    else {\n      for (let key in source.sources) {\n        if (source.sources.hasOwnProperty(key)) {\n          request.sources[key] = { source: source.sources[key].content };\n        }\n      }\n    }\n\n    return request;\n  }\n\n  handleResult(data, result) {\n    const { selected, reports, mapping } = this.state;\n    const uniqueIssues = formatIssues(data, mapping, result);\n\n    if (uniqueIssues.length === 0) {\n      this.setState({\n        reports: {\n          ...reports,\n          [selected]: {\n            message: `✔ No errors/warnings found in ${selected}`\n          }\n        }\n      });\n    } else {\n      this.setState({\n        reports: {\n          ...reports,\n          [selected]: {\n            list: uniqueIssues\n          }\n        }\n      });\n    }\n  }\n\n  async highlightIssue(issue, message) {\n    const position = {\n      start: { line: message.line, column: message.column },\n      end: { line: message.endLine, column: message.endCol }\n    }\n    const color = message.severity === 1 ? '#ffd300' : '#ff0000';\n    await this.props.client.editor.highlight(position, issue.filePath, color);\n  }\n\n  render() {\n    const { contractList, selected, isAnalyzig, analyses, reports, creadOpen } = this.state;\n    const [target] = selected.split(separator);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row border-bottom pb-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <div className=\"btn btn-light btn-block text-left rounded-0 border-0\" style={{ cursor: \"pointer\" }} onClick={() => { this.setState({ creadOpen: !creadOpen }) }}>\n              Credentials\n              <FontAwesomeIcon className=\"ml-2\" icon={faInfoCircle} id=\"cred_info\" />\n              <FontAwesomeIcon icon={creadOpen ? faAngleDown : faAngleRight} style={{ position: 'absolute', right: 24, top: 10 }} />\n              <Tooltip placement=\"right\"\n                isOpen={this.state.infoTooltipOpen}\n                autohide={false}\n                target=\"cred_info\"\n                toggle={() => { this.setState({ infoTooltipOpen: !this.state.infoTooltipOpen }); }}>\n                In order to use MythX APIs you need to have credentials.\n                You can use the trial credential, but analysis's result will be limited.\n                In order to get credential you need to <a href=\"https://mythx.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-nowrap\">sign up</a>\n              </Tooltip>\n            </div>\n            <div className={creadOpen ? null : \"collapse\"}>\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">Address</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Address\"\n                    onChange={(e) => this.setState({ address: e.target.value })}\n                    defaultValue={this.state.address} />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"pwd\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"pwd\"\n                    placeholder=\"Password\"\n                    onChange={(e) => this.setState({ pwd: e.target.value })}\n                    defaultValue={this.state.pwd} />\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={this.saveCredentials}>\n                  Save\n                  </button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              target ?\n                <>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control\"\n                      value={selected}\n                      onChange={(e) => this.setState({ selected: e.target.value })}\n                      disabled={isAnalyzig}\n                    >\n                      {contractList.map((x, i) =>\n                        <option key={i} value={x}>{x}</option>\n                      )}\n                    </select>\n                  </div>\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={this.analyze}\n                      disabled={isAnalyzig}>\n                      {\n                        isAnalyzig ?\n                          <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> :\n                          <span>Analyze</span>\n                      }\n                    </button>\n                    <FontAwesomeIcon className=\"ml-2\" icon={faInfoCircle} id=\"analysis_info\" />\n                    <Tooltip placement=\"right\"\n                      isOpen={this.state.analysisTooltipOpen}\n                      autohide={true}\n                      target=\"analysis_info\"\n                      toggle={() => { this.setState({ analysisTooltipOpen: !this.state.analysisTooltipOpen }); }}>\n                      Analysis can take couple of minutes\n                    </Tooltip>\n                    {\n                      analyses[selected] && <CopyToClipboard text={JSON.stringify(analyses[selected])}>\n                        <button type=\"button\" className=\"btn float-right\" title=\"Copy raw report to clipboard\">\n                          <FontAwesomeIcon className=\"ml-2\" icon={faClipboard} /><span className=\"pl-1\">Raw report</span>\n                        </button>\n                      </CopyToClipboard>\n                    }\n                  </div>\n                </> :\n                <div className=\"alert alert-warning w-100\" role=\"alert\">\n                  You need to compile your contract first!\n                </div>\n            }\n          </div>\n        </div>\n        <Report report={reports[selected] || {}} highlightIssue={this.highlightIssue} />\n      </div>\n    );\n  }\n}\n\nPlugin.propTypes = {\n  client: PropTypes.object.isRequired,\n};\n\nexport default Plugin;\n","import SourceMappingDecoder from 'remix-lib/src/sourceMappingDecoder';\n\nimport { isFatal, getUniqueIssues } from './eslint';\n\nconst mythx2Severity = {\n  High: 2,\n  Medium: 1,\n};\n\nconst decoder = new SourceMappingDecoder();\n\n/**\n * Turn a srcmap entry (the thing between semicolons) into a line and\n * column location.\n * We make use of this.sourceMappingDecoder of this class to make\n * the conversion.\n *\n * @param {string} srcEntry - a single entry of solc sourceMap\n * @param {Array} lineBreakPositions - array returned by the function 'mapLineBreakPositions'\n * @returns {line: number, column: number}\n */\nconst textSrcEntry2lineColumn = (srcEntry, lineBreakPositions) => {\n  const ary = srcEntry.split(':');\n  const sourceLocation = {\n    length: parseInt(ary[1], 10),\n    start: parseInt(ary[0], 10),\n  };\n  const loc = decoder.convertOffsetToLineColumn(sourceLocation, lineBreakPositions);\n  return [loc.start, loc.end];\n};\n\n/**\n * Convert a MythX issue into an ESLint-style issue.\n * The eslint report format which we use, has these fields:\n *\n * - column,\n * - endCol,\n * - endLine,\n * - fatal,\n * - line,\n * - message,\n * - description,\n * - ruleId,\n * - ruleLink,\n * - severity\n *\n * but a MythX JSON report has these fields:\n *\n * - description.head\n * - description.tail\n * - locations\n * - severity\n * - swcId\n * - swcTitle\n *\n * @param {object} issue - the MythX issue we want to convert\n * @param {string} source - holds the contract code\n * @returns eslint-issue object\n */\nconst issue2EsLint = (issue, source) => {\n  let swcLink;\n\n  if (!issue.swcID) {\n    swcLink = 'N/A';\n  } else {\n    swcLink = 'https://smartcontractsecurity.github.io/SWC-registry/docs/' + issue.swcID;\n  }\n\n  const esIssue = {\n    fatal: false,\n    ruleId: issue.swcID,\n    ruleLink: swcLink,\n    message: `${issue.description.head}`,\n    description: `${issue.description.tail}`,\n    severity: mythx2Severity[issue.severity] || 1,\n    mythXseverity: issue.severity,\n    line: -1,\n    column: 0,\n    endLine: -1,\n    endCol: 0,\n  };\n\n  let startLineCol, endLineCol;\n  const lineBreakPositions = decoder.getLinebreakPositions(source);\n\n  if (issue.locations.length) {\n    const srcEntry = issue.locations[0].sourceMap.split(';')[0];\n    [startLineCol, endLineCol] = textSrcEntry2lineColumn(srcEntry, lineBreakPositions);\n  }\n\n  if (startLineCol) {\n    esIssue.line = startLineCol.line;\n    esIssue.column = startLineCol.column;\n    esIssue.endLine = endLineCol.line;\n    esIssue.endCol = endLineCol.column;\n  }\n\n  return esIssue;\n};\n\n/**\n * Gets the source index from the issue sourcemap\n * @param {object} issue - issue item from the collection MythX analyze API output\n * @returns {number}\n */\nconst getSourceIndex = issue => {\n  if (issue.locations.length) {\n    const sourceMapRegex = /(\\d+):(\\d+):(\\d+)/g;\n    const match = sourceMapRegex.exec(issue.locations[0].sourceMap);\n    // Ignore `-1` source index for compiler generated code\n    return match ? match[3] : 0;\n  }\n\n  return 0;\n};\n\n/**\n * Converts MythX analyze API output item to Eslint compatible object\n * @param {object} report - issue item from the collection MythX analyze API output\n * @param {object} data - Contains array of solidity contracts source code and the input filepath of contract\n * @returns {object}\n */\nconst convertMythXReport2EsIssue = (report, mapping, data) => {\n  const { issues, sourceList } = report;\n  const results = {};\n\n  // eslint-disable-next-line array-callback-return\n  issues.map(issue => {\n    const sourceIndex = getSourceIndex(issue);\n\n    /**\n     * MythX API sends `sourceList` with `/` added in the contract name\n     * Example: sourceList: [ 'token.sol', '/token.sol' ]\n     *\n     * TODO: Remove the `replace` hack by fixing the `sourceList` response from MythX API\n     */\n    const file = sourceList[sourceIndex].replace(/^\\//, '');\n    const filePath = mapping[file] || file;\n\n    if (!results[filePath]) {\n      results[filePath] = {\n        errorCount: 0,\n        warningCount: 0,\n        fixableErrorCount: 0,\n        fixableWarningCount: 0,\n        filePath,\n        messages: [],\n      };\n    }\n\n    let message = { error: \"File not found\" };\n    if (data.sources[filePath]) {\n      message = issue2EsLint(issue, data.sources[filePath].content);\n    }\n\n    results[filePath].messages.push({ ...message, sourceType: report.sourceType });\n  });\n\n  for (let k in results) {\n    if (results.hasOwnProperty(k)) {\n      results[k].warningCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n      results[k].errorCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        isFatal(fatal, severity) ? acc + 1 : acc, 0);\n    }\n  }\n\n  return Object.values(results);\n};\n\nexport const formatIssues = (data, mapping, issues) => {\n  const results = {};\n  issues.forEach(report => {\n    convertMythXReport2EsIssue(report, mapping, data)\n      .forEach(issue => {\n        const result = results[issue.filePath];\n        if (!result) {\n          results[issue.filePath] = issue;\n          return;\n        }\n\n        results[issue.filePath] = {\n          errorCount: result.errorCount + issue.errorCount,\n          warningCount: result.warningCount + issue.warningCount,\n          fixableErrorCount: result.fixableErrorCount + issue.fixableErrorCount,\n          fixableWarningCount: result.fixableWarningCount + issue.fixableWarningCount,\n          filePath: result.filePath,\n          messages: [...result.messages, ...issue.messages],\n        };\n      });\n  });\n\n  const eslintIssues = Object.values(results)\n    .reduce((acc, curr) => acc.concat(curr), []);\n  return getUniqueIssues(eslintIssues);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\n\nimport { isFatal } from './../lib/eslint';\n\nfunction Report({ report, highlightIssue }) {\n  return (\n    <>\n      {\n        report.message &&\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <div className=\"alert alert-success w-100\" role=\"alert\">\n              {report.message}\n            </div>\n          </div>\n        </div>\n      }\n      {\n        report.list &&\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              report.list.map((x, i) => {\n                const issueCount = x.errorCount + x.warningCount;\n                const summary = (amount, caption) => {\n                  return `${amount} ${amount === 1 ? caption : `${caption}s`}`;\n                };\n                return (\n                  <div key={i} className=\"border-bottom pt-2 pb-2\">\n                    <div className=\"text-truncate font-weight-bold\">{x.filePath}</div>\n                    {\n                      x.messages.map((m, j) => {\n                        return (\n                          <div key={j} className=\"pl-3\">\n                            {\n                              m.error ?\n                                <div className=\"alert alert-danger p-1\">\n                                  {m.error}\n                                </div> :\n                                <>\n                                  <button type=\"button\"\n                                    className={`btn ${isFatal(m.fatal, m.severity) ? \"btn-danger\" : \"btn-warning\"} text-left p-1 mb-1 w-100`}\n                                    onClick={() => { highlightIssue(x, m); }}>\n                                    {m.sourceType === \"raw-bytecode\" &&\n                                      <span title=\"raw-bytecode\">\n                                        <FontAwesomeIcon className=\"float-right\" style={{ fontSize: 10 }} icon={faCode} />\n                                      </span>\n                                    }\n                                    <span className=\"pr-2\">{`[${m.line + 1}:${m.column}]`}</span>\n                                    <span title={`${m.description}`} style={{ cursor: 'help' }}>{`${m.message}`}</span>\n                                    {m.ruleId && <a href={m.ruleLink} className=\"pl-1\">[{m.ruleId}]</a>}\n                                  </button>\n                                </>\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                    {\n                      !!issueCount &&\n                      <div>\n                        {`✖ ${summary(issueCount, 'issue')} (${summary(x.errorCount, 'error')}, ${summary(x.warningCount, 'warning')})`}\n                      </div>\n                    }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      }\n    </>\n  );\n}\n\nReport.propTypes = {\n  report: PropTypes.object.isRequired,\n  highlightIssue: PropTypes.func.isRequired\n};\n\nexport default Report;\n","module.exports = __webpack_public_path__ + \"static/media/remix.0cc3e824.svg\";","module.exports = __webpack_public_path__ + \"static/media/mythx.5fc6cc7c.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.bd770134.svg\";","export const isFatal = (fatal, severity) => fatal || severity === 2;\n\nconst getUniqueMessages = messages => {\n  const jsonValues = messages.map(m => JSON.stringify(m));\n  const uniuqeValues = jsonValues.reduce((accum, curr) => {\n    if (accum.indexOf(curr) === -1) {\n      accum.push(curr);\n    }\n    return accum;\n  }, []);\n\n  return uniuqeValues.map(v => JSON.parse(v));\n};\n\nconst calculateErrors = messages =>\n  messages.reduce((acc, { fatal, severity }) => isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\nconst calculateWarnings = messages =>\n  messages.reduce((acc, { fatal, severity }) => !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n\nexport const getUniqueIssues = issues =>\n  issues.map(({ messages, ...restProps }) => {\n    const uniqueMessages = getUniqueMessages(messages);\n    const warningCount = calculateWarnings(uniqueMessages);\n    const errorCount = calculateErrors(uniqueMessages);\n\n    return {\n      ...restProps,\n      messages: uniqueMessages,\n      errorCount,\n      warningCount,\n    };\n  });","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport packageJson from './../../package.json';\n\nfunction Footer({ isPlugin }) {\n  return (\n    <div className={`position-absolute text-center w-100 pb-1${isPlugin ? '' : ' text-white'}`} style={{ fontSize: 12, bottom: 0 }}>\n      <a href={`https://github.com/aquiladev/remix-mythx-plugin/releases/tag/v${packageJson.version}`} target='_block' rel=\"noopener noreferrer\">\n        v{packageJson.version}\n      </a> | <a href=\"https://github.com/aquiladev/remix-mythx-plugin\" target=\"_blank\" rel=\"noopener noreferrer\">\n        GitHub\n      </a> | <a href=\"https://discord.gg/VhdtjCh\" target=\"_blank\" rel=\"noopener noreferrer\">Get support</a>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  isPlugin: PropTypes.bool.isRequired\n};\n\nexport default Footer;","import React from 'react';\n\nimport Footer from './Footer';\nimport remixLogo from './../images/remix.svg';\nimport mythxLogo from './../images/mythx.png';\nimport plus from './../images/plus.svg';\n\nfunction Home() {\n  return (\n    <>\n      <div className=\"h-100\"\n        style={{ background: '#012A3E' }}>\n        <div className=\"d-flex align-items-end flex-column\" style={{ height: '50%' }}>\n          <div className=\"mt-auto pb-5 w-100\">\n            <h1 className=\"display-1 text-white\"\n              style={{ textAlign: 'center' }}>re:MythX</h1>\n          </div>\n        </div>\n        <div className=\"text-center pt-4\">\n          <a href=\"https://remix.ethereum.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={remixLogo} alt=\"remix\" style={{ height: 120, width: 120, verticalAlign: 'top' }} />\n          </a>\n          <img src={plus} alt=\"plus\" className=\"pl-5 pr-5\" style={{ height: 100, width: 140 }} />\n          <a href=\"https://mythx.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={mythxLogo} alt=\"mythx\" style={{ height: 130, width: 180, verticalAlign: 'top' }} />\n          </a>\n        </div>\n      </div>\n      <Footer isPlugin={false} />\n    </>\n  );\n}\n\nexport default Home","import React from 'react';\nimport { createIframeClient, remixApi } from 'remix-plugin';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Plugin from './components/Plugin';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\n\nlet client = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      plugin: false\n    };\n\n    const devMode = { port: 8080 }\n    client = createIframeClient({ customApi: remixApi, devMode });\n    client.onload(() => {\n      this.setState({ plugin: true });\n    })\n  }\n\n  render() {\n    const { plugin } = this.state;\n\n    return (\n      <>\n        {\n          plugin ?\n            <div style={{ position: 'relative', minHeight: '100vh' }}>\n              <main>\n                <Plugin client={client} />\n              </main>\n              <Footer isPlugin />\n            </div> :\n            <Home />\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}