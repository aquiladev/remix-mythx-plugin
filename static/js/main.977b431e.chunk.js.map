{"version":3,"sources":["images/info.svg","images/remix.svg","images/mythx.png","images/plus.svg","lib/eslint.js","lib/report.js","Report.js","Plugin.js","Footer.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","isFatal","fatal","severity","getUniqueIssues","issues","map","_ref3","messages","restProps","Object","objectWithoutProperties","uniqueMessages","m","JSON","stringify","reduce","accum","curr","indexOf","push","v","parse","getUniqueMessages","warningCount","acc","_ref2","calculateWarnings","errorCount","_ref","calculateErrors","objectSpread","mythx2Severity","High","Medium","decoder","SourceMappingDecoder","issue2EsLint","issue","source","swcLink","swcID","startLineCol","endLineCol","esIssue","ruleId","ruleLink","message","concat","description","head","tail","mythXseverity","line","column","endLine","endCol","lineBreakPositions","getLinebreakPositions","locations","length","_textSrcEntry2lineCol","srcEntry","ary","split","sourceLocation","parseInt","start","loc","convertOffsetToLineColumn","end","textSrcEntry2lineColumn","sourceMap","_textSrcEntry2lineCol2","slicedToArray","formatIssues","data","eslintIssues","report","sourceList","results","k","sourceIndex","match","exec","getSourceIndex","filePath","replace","fixableErrorCount","fixableWarningCount","error","sources","content","hasOwnProperty","values","convertMythXReport2EsIssue","Report","highlightIssue","react_default","a","createElement","Fragment","className","role","list","x","i","problemCount","summary","amount","caption","key","j","type","onClick","title","style","cursor","href","storageKey","TRIAL_CREDS","address","pwd","Plugin","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","analyze","asyncToGenerator","regenerator_default","mark","_callee","_this$state","compilation","mythXClient","wrap","_context","prev","next","state","armlet","Client","ethAddress","password","setState","analysis","isAnalyzig","client","editor","discardHighlight","analyzeWithStatus","getRequestData","clientToolName","then","result","handleResult","catch","err","stop","raw","localStorage","getItem","settings","selected","infoTooltipOpen","saveCredentials","bind","assertThisInitialized","getContractList","on","target","version","keys","contracts","_this$state2","setItem","_this$state3","_compilation$data","_compilation$source","_data$contracts","bytecode","evm","deployedBytecode","request","contractName","object","deployedSourceMap","analysisMode","mainSource","uniqueIssues","_compilation$data2","_data$contracts2","file","name","path","position","color","highlight","_this2","_this$state4","src","info","alt","height","width","id","Tooltip","placement","isOpen","autohide","toggle","rel","htmlFor","aria-describedby","placeholder","onChange","e","value","defaultValue","disabled","aria-hidden","analysisTooltipOpen","src_Report","React","Component","Footer","isPlugin","fontSize","bottom","packageJson","Home","background","textAlign","remixLogo","verticalAlign","plus","mythxLogo","src_Footer","App","plugin","createIframeClient","customApi","remixApi","devMode","port","onload","minHeight","src_Plugin","src_Home","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.977b431e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/info.ab654d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/remix.0cc3e824.svg\";","module.exports = __webpack_public_path__ + \"static/media/mythx.5fc6cc7c.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.bd770134.svg\";","export const isFatal = (fatal, severity) => fatal || severity === 2;\n\nconst getUniqueMessages = messages => {\n  const jsonValues = messages.map(m => JSON.stringify(m));\n  const uniuqeValues = jsonValues.reduce((accum, curr) => {\n    if (accum.indexOf(curr) === -1) {\n      accum.push(curr);\n    }\n    return accum;\n  }, []);\n\n  return uniuqeValues.map(v => JSON.parse(v));\n};\n\nconst calculateErrors = messages =>\n  messages.reduce((acc, { fatal, severity }) => isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\nconst calculateWarnings = messages =>\n  messages.reduce((acc, { fatal, severity }) => !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n\nexport const getUniqueIssues = issues =>\n  issues.map(({ messages, ...restProps }) => {\n    const uniqueMessages = getUniqueMessages(messages);\n    const warningCount = calculateWarnings(uniqueMessages);\n    const errorCount = calculateErrors(uniqueMessages);\n\n    return {\n      ...restProps,\n      messages: uniqueMessages,\n      errorCount,\n      warningCount,\n    };\n  });","import SourceMappingDecoder from 'remix-lib/src/sourceMappingDecoder';\n\nimport { isFatal, getUniqueIssues } from './eslint';\n\nconst mythx2Severity = {\n  High: 2,\n  Medium: 1,\n};\n\nconst decoder = new SourceMappingDecoder();\n\n/**\n * Turn a srcmap entry (the thing between semicolons) into a line and\n * column location.\n * We make use of this.sourceMappingDecoder of this class to make\n * the conversion.\n *\n * @param {string} srcEntry - a single entry of solc sourceMap\n * @param {Array} lineBreakPositions - array returned by the function 'mapLineBreakPositions'\n * @returns {line: number, column: number}\n */\nconst textSrcEntry2lineColumn = (srcEntry, lineBreakPositions) => {\n  const ary = srcEntry.split(':');\n  const sourceLocation = {\n    length: parseInt(ary[1], 10),\n    start: parseInt(ary[0], 10),\n  };\n  const loc = decoder.convertOffsetToLineColumn(sourceLocation, lineBreakPositions);\n  return [loc.start, loc.end];\n};\n\n/**\n * Convert a MythX issue into an ESLint-style issue.\n * The eslint report format which we use, has these fields:\n *\n * - column,\n * - endCol,\n * - endLine,\n * - fatal,\n * - line,\n * - message,\n * - description,\n * - ruleId,\n * - ruleLink,\n * - severity\n *\n * but a MythX JSON report has these fields:\n *\n * - description.head\n * - description.tail\n * - locations\n * - severity\n * - swcId\n * - swcTitle\n *\n * @param {object} issue - the MythX issue we want to convert\n * @param {string} source - holds the contract code\n * @returns eslint-issue object\n */\nconst issue2EsLint = (issue, source) => {\n  let swcLink;\n\n  if (!issue.swcID) {\n    swcLink = 'N/A';\n  } else {\n    swcLink = 'https://smartcontractsecurity.github.io/SWC-registry/docs/' + issue.swcID;\n  }\n\n  const esIssue = {\n    fatal: false,\n    ruleId: issue.swcID,\n    ruleLink: swcLink,\n    message: `${issue.description.head}`,\n    description: `${issue.description.tail}`,\n    severity: mythx2Severity[issue.severity] || 1,\n    mythXseverity: issue.severity,\n    line: -1,\n    column: 0,\n    endLine: -1,\n    endCol: 0,\n  };\n\n  let startLineCol, endLineCol;\n  const lineBreakPositions = decoder.getLinebreakPositions(source);\n\n  if (issue.locations.length) {\n    const srcEntry = issue.locations[0].sourceMap.split(';')[0];\n    [startLineCol, endLineCol] = textSrcEntry2lineColumn(srcEntry, lineBreakPositions);\n  }\n\n  if (startLineCol) {\n    esIssue.line = startLineCol.line;\n    esIssue.column = startLineCol.column;\n    esIssue.endLine = endLineCol.line;\n    esIssue.endCol = endLineCol.column;\n  }\n\n  return esIssue;\n};\n\n/**\n * Gets the source index from the issue sourcemap\n * @param {object} issue - issue item from the collection MythX analyze API output\n * @returns {number}\n */\nconst getSourceIndex = issue => {\n  if (issue.locations.length) {\n    const sourceMapRegex = /(\\d+):(\\d+):(\\d+)/g;\n    const match = sourceMapRegex.exec(issue.locations[0].sourceMap);\n    // Ignore `-1` source index for compiler generated code\n    return match ? match[3] : 0;\n  }\n\n  return 0;\n};\n\n/**\n * Converts MythX analyze API output item to Eslint compatible object\n * @param {object} report - issue item from the collection MythX analyze API output\n * @param {object} data - Contains array of solidity contracts source code and the input filepath of contract\n * @returns {object}\n */\nconst convertMythXReport2EsIssue = (report, data) => {\n  const { issues, sourceList } = report;\n  const results = {};\n\n  // eslint-disable-next-line array-callback-return\n  issues.map(issue => {\n    const sourceIndex = getSourceIndex(issue);\n\n    /**\n     * MythX API sends `sourceList` with `/` added in the contract name\n     * Example: sourceList: [ 'token.sol', '/token.sol' ]\n     *\n     * TODO: Remove the `replace` hack by fixing the `sourceList` response from MythX API\n     */\n    const filePath = sourceList[sourceIndex].replace(/^\\//, '');\n\n    if (!results[filePath]) {\n      results[filePath] = {\n        errorCount: 0,\n        warningCount: 0,\n        fixableErrorCount: 0,\n        fixableWarningCount: 0,\n        filePath,\n        messages: [],\n      };\n    }\n\n    let message = { error: \"Error: File not found\" };\n    if (data.sources[filePath]) {\n      message = issue2EsLint(issue, data.sources[filePath].content);\n    }\n\n    results[filePath].messages.push(message);\n  });\n\n  for (let k in results) {\n    if (results.hasOwnProperty(k)) {\n      results[k].warningCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        !isFatal(fatal, severity) ? acc + 1 : acc, 0);\n\n      results[k].errorCount = results[k].messages.reduce((acc, { fatal, severity }) =>\n        isFatal(fatal, severity) ? acc + 1 : acc, 0);\n    }\n  }\n\n  return Object.values(results);\n};\n\nexport const formatIssues = (data, issues) => {\n  const eslintIssues = issues\n    .map(report => convertMythXReport2EsIssue(report, data))\n    .reduce((acc, curr) => acc.concat(curr), []);\n\n  return getUniqueIssues(eslintIssues);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Report({ report, highlightIssue }) {\n  return (\n    <>\n      {\n        report.message ?\n          <div className=\"row mt-3\">\n            <div className=\"col-md-6 offset-md-3\">\n              <div className=\"alert alert-success w-100\" role=\"alert\">\n                {report.message}\n              </div>\n            </div>\n          </div> : null\n      }\n      {\n        report.list ?\n          <div className=\"row mt-3\">\n            <div className=\"col-md-6 offset-md-3\">\n              {\n                report.list.map((x, i) => {\n                  const problemCount = x.errorCount + x.warningCount;\n                  const summary = (amount, caption) => {\n                    return `${amount} ${amount === 1 ? caption : `${caption}s`}`;\n                  };\n                  return (\n                    <div key={i} className=\"border-bottom pt-2 pb-2\">\n                      <div className=\"text-truncate\">{x.filePath}</div>\n                      {\n                        x.messages.map((m, j) => {\n                          return (\n                            <div key={j} className=\"pl-3\">\n                              {\n                                m.error ?\n                                  <>{m.error}</> :\n                                  <>\n                                    <button type=\"button\"\n                                      className=\"btn btn-link p-0 pr-1\"\n                                      onClick={() => { highlightIssue(x, m); }}>\n                                      {`[${m.line + 1}:${m.column}]`}\n                                    </button>\n                                    <span title={`${m.description}`} style={{ cursor: 'help' }}>{`${m.message}`}</span>\n                                    {\n                                      m.ruleId ?\n                                        <a href={m.ruleLink} className=\"pl-1\">[{m.ruleId}]</a> :\n                                        null\n                                    }\n                                  </>\n                              }\n                            </div>\n                          );\n                        })\n                      }\n                      <div>\n                        {`✖ ${summary(problemCount, 'problem')} (${summary(x.errorCount, 'error')}, ${summary(x.warningCount, 'warning')})`}\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div> : null\n      }\n    </>\n  );\n}\n\nReport.propTypes = {\n  report: PropTypes.object.isRequired,\n  highlightIssue: PropTypes.func.isRequired\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport armlet from 'armlet';\nimport { Tooltip } from 'reactstrap';\n\nimport { formatIssues } from './lib/report';\nimport Report from './Report';\nimport info from './images/info.svg';\n\nconst storageKey = 'remix-mythx-plugin';\nconst TRIAL_CREDS = {\n  address: '0x0000000000000000000000000000000000000000',\n  pwd: 'trial'\n};\n\nclass Plugin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const raw = localStorage.getItem(storageKey) || '{}';\n    const settings = JSON.parse(raw);\n\n    this.state = {\n      address: settings.address || TRIAL_CREDS.address,\n      pwd: settings.pwd || TRIAL_CREDS.pwd,\n      compilation: {},\n      selected: '',\n      isAnalyzig: false,\n      analysis: {},\n      report: {},\n      error: '',\n      infoTooltipOpen: false\n    };\n\n    this.saveCredentials = this.saveCredentials.bind(this);\n    this.analyze = this.analyze.bind(this);\n    this.getRequestData = this.getRequestData.bind(this);\n    this.handleResult = this.handleResult.bind(this);\n    this.getContractList = this.getContractList.bind(this);\n    this.highlightIssue = this.highlightIssue.bind(this);\n\n    this.props.client.on('solidity', 'compilationFinished', (target, source, version, data) => {\n      const list = Object.keys(data.contracts[target]);\n      this.setState({\n        compilation: {\n          target,\n          source,\n          version,\n          data\n        },\n        selected: list[0]\n      });\n    });\n  }\n\n  saveCredentials() {\n    const { address, pwd } = this.state;\n    localStorage.setItem(storageKey, JSON.stringify({ address, pwd }));\n  }\n\n  analyze = async () => {\n    const { address, pwd, compilation } = this.state;\n\n    const mythXClient = new armlet.Client(\n      {\n        ethAddress: address,\n        password: pwd,\n      });\n\n    this.setState({\n      analysis: {},\n      error: '',\n      isAnalyzig: true\n    });\n    await this.props.client.editor.discardHighlight();\n    mythXClient.analyzeWithStatus(\n      {\n        \"data\": this.getRequestData(),\n        \"clientToolName\": \"remythx\",    \n      },\n      240 * 1000, // Timeout\n      90 * 1000, // Initial delay\n      )\n      .then(result => {\n        this.setState({\n          analysis: result,\n          error: '',\n          isAnalyzig: false\n        });\n\n        const { issues } = result;\n        this.handleResult(compilation.source, issues);\n      }).catch(err => {\n        this.setState({\n          error: err.message || err,\n          analysis: {},\n          isAnalyzig: false\n        });\n      });\n    // const result = require('./examples/reportWithIssues.json');\n    // this.handleResult(compilation.source, result);\n  }\n\n  getRequestData() {\n    const { compilation, selected } = this.state;\n    const { data = {}, source = {} } = compilation;\n    const { contracts = [] } = data;\n\n    var bytecode = contracts[compilation.target][selected].evm.bytecode;\n    var deployedBytecode = contracts[compilation.target][selected].evm.deployedBytecode;\n    const request = {\n      contractName: selected,\n      bytecode: bytecode.object,\n      sourceMap: bytecode.sourceMap,\n      deployedBytecode: deployedBytecode.object,\n      deployedSourceMap: deployedBytecode.sourceMap,\n      analysisMode: \"quick\",\n      mainSource: compilation.target,\n      sourceList: Object.keys(source.sources),\n      sources: {}\n    };\n\n    for (let key in source.sources) {\n      if (source.sources.hasOwnProperty(key)) {\n        request.sources[key] = { source: source.sources[key].content };\n      }\n    }\n\n    return request;\n  }\n\n  handleResult(data, result) {\n    const { compilation } = this.state;\n    const uniqueIssues = formatIssues(data, result);\n\n    if (uniqueIssues.length === 0) {\n      this.setState({\n        report: {\n          message: `✔ No errors/warnings found in ${compilation.target}`\n        }\n      });\n    } else {\n      this.setState({\n        report: {\n          list: uniqueIssues\n        }\n      });\n    }\n  }\n\n  getContractList() {\n    const { compilation } = this.state;\n    const { data = {} } = compilation;\n    const { contracts = [] } = data;\n    var file = contracts[compilation.target] || {};\n    return Object.keys(file).map(x => {\n      return {\n        name: x,\n        path: `${compilation.target}::${x}`\n      }\n    });\n  }\n\n  async highlightIssue(issue, message) {\n    const position = {\n      start: { line: message.line, column: message.column },\n      end: { line: message.endLine, column: message.endCol }\n    }\n    const color = message.severity === 1 ? '#ffd300' : '#ff0000';\n    await this.props.client.editor.highlight(position, issue.filePath, color);\n  }\n\n  render() {\n    const { compilation, selected, isAnalyzig, error, report } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row border-bottom pb-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            <div>\n              Credentials\n              <img src={info} alt=\"info\" className=\"pl-2\" style={{ height: 18, width: 26 }} id=\"cred_info\" />\n              <Tooltip placement=\"right\"\n                isOpen={this.state.infoTooltipOpen}\n                autohide={false}\n                target=\"cred_info\"\n                toggle={() => { this.setState({ infoTooltipOpen: !this.state.infoTooltipOpen }); }}>\n                In order to use MythX APIs you need to have credentials.\n                You can use the trial credential, but analysis's result will be limited.\n                In order to get credential you need to <a href=\"https://mythx.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-nowrap\">sign up</a>\n              </Tooltip>\n            </div>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"address\">Address</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"address\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Address\"\n                  onChange={(e) => this.setState({ address: e.target.value })}\n                  defaultValue={this.state.address} />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"pwd\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"pwd\"\n                  placeholder=\"Password\"\n                  onChange={(e) => this.setState({ pwd: e.target.value })}\n                  defaultValue={this.state.pwd} />\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.saveCredentials}>\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-6 offset-md-3\">\n            {\n              compilation.target ?\n                <form>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control\"\n                      defaultValue={selected}\n                      onChange={(e) => this.setState({ selected: e.target.value })}>\n                      {this.getContractList().map((x, i) =>\n                        <option\n                          key={i}\n                          value={x.name}>\n                          {x.path}\n                        </option>\n                      )}\n                    </select>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.analyze}\n                    disabled={isAnalyzig}>\n                    {\n                      isAnalyzig ?\n                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> :\n                        <span>Analyze</span>\n                    }\n                  </button>\n                  <img src={info} alt=\"info\" className=\"pl-2\" style={{ height: 18, width: 26 }} id=\"analysis_info\" />\n                  <Tooltip placement=\"right\"\n                    isOpen={this.state.analysisTooltipOpen}\n                    autohide={true}\n                    target=\"analysis_info\"\n                    toggle={() => { this.setState({ analysisTooltipOpen: !this.state.analysisTooltipOpen }); }}>\n                    Analysis can take couple of minutes\n                  </Tooltip>\n                </form> :\n                <div className=\"alert alert-warning w-100\" role=\"alert\">\n                  You need to compile your contract first!\n                </div>\n            }\n          </div>\n        </div>\n        {\n          error ?\n            <div className=\"row mt-3\">\n              <div className=\"col-md-6 offset-md-3\">\n                <div className=\"alert alert-danger w-100\" role=\"alert\">\n                  {error}\n                </div>\n              </div>\n            </div> : null\n        }\n        <Report report={report} highlightIssue={this.highlightIssue} />\n      </div>\n    );\n  }\n}\n\nPlugin.propTypes = {\n  client: PropTypes.object.isRequired,\n};\n\nexport default Plugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport packageJson from './../package.json';\n\nfunction Footer({ isPlugin }) {\n  return (\n    <div className={`position-absolute text-center w-100 pb-1${isPlugin ? '' : ' text-white'}`} style={{ fontSize: 12, bottom: 0 }}>\n      <a href={`https://github.com/aquiladev/remix-mythx-plugin/releases/tag/v${packageJson.version}`} target='_block' rel=\"noopener noreferrer\">\n        v{packageJson.version}\n      </a> | <a href=\"https://github.com/aquiladev/remix-mythx-plugin\" target=\"_blank\" rel=\"noopener noreferrer\">\n        GitHub\n      </a> | <a href=\"https://discord.gg/VhdtjCh\" target=\"_blank\" rel=\"noopener noreferrer\">Get support</a>\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  isPlugin: PropTypes.bool.isRequired\n};\n\nexport default Footer;","import React from 'react';\n\nimport Footer from './Footer';\nimport remixLogo from './images/remix.svg';\nimport mythxLogo from './images/mythx.png';\nimport plus from './images/plus.svg';\n\nfunction Home() {\n  return (\n    <>\n      <div className=\"h-100\"\n        style={{ background: '#012A3E' }}>\n        <div className=\"d-flex align-items-end flex-column\" style={{ height: '50%' }}>\n          <div className=\"mt-auto pb-5 w-100\">\n            <h1 className=\"display-1 text-white\"\n              style={{ textAlign: 'center' }}>re:MythX</h1>\n          </div>\n        </div>\n        <div className=\"text-center pt-4\">\n          <a href=\"https://remix.ethereum.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={remixLogo} alt=\"remix\" style={{ height: 120, width: 120, verticalAlign: 'top' }} />\n          </a>\n          <img src={plus} alt=\"plus\" className=\"pl-5 pr-5\" style={{ height: 100, width: 140 }} />\n          <a href=\"https://mythx.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={mythxLogo} alt=\"mythx\" style={{ height: 130, width: 180, verticalAlign: 'top' }} />\n          </a>\n        </div>\n      </div>\n      <Footer isPlugin={false} />\n    </>\n  );\n}\n\nexport default Home","import React from 'react';\nimport { createIframeClient, remixApi } from 'remix-plugin';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Plugin from './Plugin';\nimport Footer from './Footer';\nimport Home from './Home';\n\nlet client = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      plugin: false\n    };\n\n    const devMode = { port: 8080 }\n    client = createIframeClient({ customApi: remixApi, devMode });\n    client.onload(() => {\n      this.setState({ plugin: true });\n    })\n  }\n\n  render() {\n    const { plugin } = this.state;\n\n    return (\n      <>\n        {\n          plugin ?\n            <div style={{ position: 'relative', minHeight: '100vh' }}>\n              <main>\n                <Plugin client={client} />\n              </main>\n              <Footer isPlugin />\n            </div> :\n            <Home />\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}